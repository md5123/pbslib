diff --git a/src/file-manager/fm-directory-view.c b/src/file-manager/fm-directory-view.c
index d8b9050..c8c99e5 100644
--- a/src/file-manager/fm-directory-view.c
+++ b/src/file-manager/fm-directory-view.c
@@ -277,6 +277,9 @@ static void     fm_directory_view_duplicate_selection          (FMDirectoryView
 static void     fm_directory_view_create_links_for_files       (FMDirectoryView      *view,
 								GList                *files,
 								GArray               *item_locations);
+static void     fm_directory_view_desktop_links_for_files (FMDirectoryView *view,
+                                GList *files,
+                                GArray *relative_item_points);
 static void     trash_or_delete_files                          (GtkWindow            *parent_window,
 								const GList          *files,
 								gboolean              delete_if_all_already_in_trash,
@@ -535,9 +538,6 @@ file_and_directory_hash  (gconstpointer  v)
 	return GPOINTER_TO_UINT (fad->file) ^ GPOINTER_TO_UINT (fad->directory);
 }
 
-
-
-
 static ScriptLaunchParameters *
 script_launch_parameters_new (NautilusFile *file,
 			      FMDirectoryView *directory_view)
@@ -1103,6 +1103,27 @@ action_create_link_callback (GtkAction *action,
 }
 
 static void
+action_desktop_link_callback (GtkAction *action,
+			     gpointer callback_data)
+{
+    FMDirectoryView *view;
+    GList *selection;
+    GArray *selected_item_locations;
+
+    g_assert (FM_IS_DIRECTORY_VIEW (callback_data));
+
+    view = FM_DIRECTORY_VIEW (callback_data);
+    selection = fm_directory_view_get_selection (view);
+    if (selection_not_empty_in_menu_callback (view, selection)) {
+        selected_item_locations = fm_directory_view_get_selected_icon_locations (view);
+        fm_directory_view_desktop_links_for_files (view, selection, selected_item_locations);
+        g_array_free (selected_item_locations, TRUE);
+    }
+
+    nautilus_file_list_free (selection);
+}
+
+static void
 action_select_all_callback (GtkAction *action, 
 			    gpointer callback_data)
 {
@@ -1429,6 +1450,25 @@ action_new_launcher_callback (GtkAction *action,
 	g_free (parent_uri);
 }
 
+static gboolean
+action_computer_icon(GList *files)
+{
+	gboolean ret = FALSE;
+	gsize length;
+	char *file_uris;
+
+	length = g_list_length(files);
+	if(length == 1){
+		file_uris = nautilus_file_get_uri(files->data);
+		if(strcmp(file_uris,"x-nautilus-desktop:///computer") == 0 ||
+		strcmp(file_uris,"computer:///") == 0){
+			ret = g_spawn_command_line_async("gnome-system-monitor -s",NULL);
+		}
+		g_free(file_uris);
+	}
+	return ret;
+}
+
 static void
 action_properties_callback (GtkAction *action,
 			    gpointer callback_data)
@@ -1441,7 +1481,8 @@ action_properties_callback (GtkAction *action,
         view = FM_DIRECTORY_VIEW (callback_data);
 	selection = fm_directory_view_get_selection (view);
 
-	fm_properties_window_present (selection, GTK_WIDGET (view));
+	if(!action_computer_icon(selection))
+		fm_properties_window_present (selection, GTK_WIDGET (view));
 
         nautilus_file_list_free (selection);
 }
@@ -1460,7 +1501,8 @@ action_self_properties_callback (GtkAction *action,
 	if (view->details->directory_as_file != NULL) {
 		files = g_list_append (NULL, nautilus_file_ref (view->details->directory_as_file));
 
-		fm_properties_window_present (files, GTK_WIDGET (view));
+		if(!action_computer_icon(files))
+			fm_properties_window_present (files, GTK_WIDGET (view));
 
 		nautilus_file_list_free (files);
 	}
@@ -3685,6 +3727,41 @@ fm_directory_view_create_links_for_files (FMDirectoryView *view, GList *files,
 }
 
 static void
+fm_directory_view_desktop_links_for_files (FMDirectoryView *view, GList *files,
+					  GArray *relative_item_points)
+{
+	GList *uris;
+	char *dir_uri;
+	CopyMoveDoneData *copy_move_done_data;
+	g_assert (relative_item_points->len == 0
+		  || g_list_length (files) == relative_item_points->len);
+	
+        g_assert (FM_IS_DIRECTORY_VIEW (view));
+        g_assert (files != NULL);
+
+	/* create a list of URIs */
+	uris = NULL;
+	g_list_foreach (files, prepend_uri_one, &uris);
+	uris = g_list_reverse (uris);
+
+        g_assert (g_list_length (uris) == g_list_length (files));
+
+	/* offset the drop locations a bit so that we don't pile
+	 * up the icons on top of each other
+	 */
+	offset_drop_points (relative_item_points,
+			    DUPLICATE_HORIZONTAL_ICON_OFFSET,
+			    DUPLICATE_VERTICAL_ICON_OFFSET);
+
+        copy_move_done_data = pre_copy_move (view);
+	dir_uri = g_filename_to_uri(g_get_user_special_dir(G_USER_DIRECTORY_DESKTOP),NULL,NULL);
+	nautilus_file_operations_copy_move (uris, relative_item_points, dir_uri, GDK_ACTION_LINK, 
+					    GTK_WIDGET (view), copy_move_done_callback, copy_move_done_data);
+	g_free (dir_uri);
+	eel_g_list_free_deep (uris);
+}
+
+static void
 fm_directory_view_duplicate_selection (FMDirectoryView *view, GList *files,
 				       GArray *relative_item_points)
 {
@@ -7282,6 +7359,10 @@ static const GtkActionEntry directory_view_entries[] = {
   /* label, accelerator */       N_("Ma_ke Link"), "<control>M",
   /* tooltip */                  N_("Create a symbolic link for each selected item"),
                                  G_CALLBACK (action_create_link_callback) },
+  /* name, stock id */         { "Desktop Link", NULL,
+  /* label, accelerator */       N_("Ma_ke Link on desktop"), "<control>L",
+  /* tooltip */                  N_("Create a symbolic link for each selected item on desktop"),
+                                 G_CALLBACK (action_desktop_link_callback) },
   /* name, stock id */         { "Rename", NULL,
   /* label, accelerator */       N_("_Rename..."), "F2",
   /* tooltip */                  N_("Rename selected item"),
@@ -8890,7 +8971,7 @@ real_update_menus (FMDirectoryView *view)
 		tip = _("Move each selected item to the Trash");
 		show_separate_delete_command = show_delete_command_auto_value;
 	}
-	
+
 	action = gtk_action_group_get_action (view->details->dir_action_group,
 					      FM_ACTION_TRASH);
 	g_object_set (action,
@@ -8932,6 +9013,10 @@ real_update_menus (FMDirectoryView *view)
 		      NULL);
 	
 	action = gtk_action_group_get_action (view->details->dir_action_group,
+					      "Desktop Link");
+	gtk_action_set_sensitive (action, can_link_files);
+
+	action = gtk_action_group_get_action (view->details->dir_action_group,
 					      FM_ACTION_PROPERTIES);
 	gtk_action_set_sensitive (action,
 				  selection_count != 0 &&
diff --git a/src/file-manager/fm-properties-window.c b/src/file-manager/fm-properties-window.c
index 845a7c9..cc9160c 100644
--- a/src/file-manager/fm-properties-window.c
+++ b/src/file-manager/fm-properties-window.c
@@ -87,7 +87,7 @@
 static GHashTable *windows;
 static GHashTable *pending_lists;
 
-struct FMPropertiesWindowDetails {	
+struct FMPropertiesWindowDetails {
 	GList *original_files;
 	GList *target_files;
 	
diff --git a/src/file-manager/nautilus-directory-view-ui.xml b/src/file-manager/nautilus-directory-view-ui.xml
index b857226..6337143 100644
--- a/src/file-manager/nautilus-directory-view-ui.xml
+++ b/src/file-manager/nautilus-directory-view-ui.xml
@@ -66,6 +66,7 @@
 		<placeholder name="File Items Placeholder">
 			<menuitem name="Duplicate" action="Duplicate"/>
 			<menuitem name="Create Link" action="Create Link"/>
+			<menuitem name="Desktop Link" action="Desktop Link"/>
 			<menuitem name="Rename" action="Rename"/>
 			<menu action="CopyToMenu">
 				<menuitem name="Copy to next pane" action="Copy to next pane"/>
@@ -158,6 +159,7 @@
 	<separator name="File actions separator"/>
 	<placeholder name="File Actions">
 		<menuitem name="Create Link" action="Create Link"/>
+		<menuitem name="Desktop Link" action="Desktop Link"/>
 		<menuitem name="Rename" action="Rename"/>
 		<menu action="CopyToMenu">
 			<menuitem name="Copy to next pane" action="Copy to next pane"/>
