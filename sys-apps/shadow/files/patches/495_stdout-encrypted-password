Description: allow chpasswd to report a correctly hashed password (using
 system defaults for hash mechanism) to stdout.
Upstream: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=505640

Index: shadow-4.1.4.1/src/chpasswd.c
===================================================================
--- shadow-4.1.4.1.orig/src/chpasswd.c
+++ shadow-4.1.4.1/src/chpasswd.c
@@ -54,7 +54,6 @@
  * Global variables
  */
 char *Prog;
-#ifndef USE_PAM
 static bool cflg   = false;
 static bool eflg   = false;
 static bool md5flg = false;
@@ -70,7 +69,8 @@
 static bool is_shadow_pwd;
 static bool pw_locked = false;
 static bool spw_locked = false;
-#endif				/* !USE_PAM */
+
+static int use_stdout = 0;
 
 /* local function prototypes */
 static void fail_exit (int code);
@@ -141,6 +141,9 @@
 	              stderr);
 #endif				/* USE_SHA_CRYPT */
 #endif				/* !USE_PAM */
+	(void) fputs (_("  -S, --stdout                  report encrypted passwords to stdout\n"
+	                "                                instead of changing the passwd file\n"),
+	              stderr);
 	(void) fputs ("\n", stderr);
 
 	exit (E_USAGE);
@@ -164,6 +167,7 @@
 		{"sha-rounds", required_argument, NULL, 's'},
 #endif				/* USE_SHA_CRYPT */
 #endif				/* !USE_PAM */
+		{"stdout", no_argument, NULL, 'S'},
 		{"help", no_argument, NULL, 'h'},
 		{NULL, 0, NULL, '\0'}
 	};
@@ -171,12 +175,12 @@
 	while ((c = getopt_long (argc, argv,
 #ifndef USE_PAM
 # ifdef USE_SHA_CRYPT
-	                         "c:ehms:",
+	                         "c:ehms:S",
 # else				/* !USE_SHA_CRYPT */
-	                         "c:ehm",
+	                         "c:ehmS",
 # endif				/* !USE_SHA_CRYPT */
 #else
-	                         "h",
+	                         "hS",
 #endif				/* !USE_PAM */
 	                         long_options, &option_index)) != -1) {
 		switch (c) {
@@ -206,6 +210,9 @@
 			break;
 #endif				/* USE_SHA_CRYPT */
 #endif				/* !USE_PAM */
+		case 'S':
+			use_stdout = 1;
+			break;
 		default:
 			usage ();
 			break;
@@ -271,6 +278,7 @@
  */
 static void check_perms (void)
 {
+	if (use_stdout) return;
 #ifdef USE_PAM
 #ifdef ACCT_TOOLS_SETUID
 	pam_handle_t *pamh = NULL;
@@ -412,6 +420,7 @@
 
 	OPENLOG ("chpasswd");
 
+	if (!use_stdout) {
 	check_perms ();
 
 #ifndef USE_PAM
@@ -419,6 +428,7 @@
 
 	open_files ();
 #endif
+	}
 
 	/*
 	 * Read each line, separating the user name from the password. The
@@ -467,13 +477,14 @@
 		newpwd = cp;
 
 #ifdef USE_PAM
-		if (do_pam_passwd_non_interractive ("chpasswd", name, newpwd) != 0) {
-			fprintf (stderr,
-			         _("%s: (line %d, user %s) password not changed\n"),
-			         Prog, line, name);
-			errors++;
-		}
-#else				/* !USE_PAM */
+		/* Even if we would normally be using PAM, use_stdout
+		 * requires us to compute the password ourselves. This
+		 * requires our ENCRYPT_METHOD to be in sync with PAM so
+		 * needs to be reworked, but for now that's better than the
+		 * rest of the system having to be in sync with PAM too.
+		 */
+		if (use_stdout) {
+#endif
 		if (   !eflg
 		    && (   (NULL == crypt_method)
 		        || (0 != strcmp (crypt_method, "NONE")))) {
@@ -492,6 +503,24 @@
 			cp = pw_encrypt (newpwd,
 			                 crypt_make_salt(crypt_method, arg));
 		}
+#ifdef USE_PAM
+		}
+#endif
+
+		if (use_stdout) {
+			fprintf (stdout, "%s:%s\n", name, cp);
+			continue;
+		}
+
+#ifdef USE_PAM
+		if (do_pam_passwd_non_interractive ("chpasswd", name, newpwd) != 0) {
+			fprintf (stderr,
+			         _("%s: (line %d, user %s) password not changed\n"),
+			         Prog, line, name);
+			errors++;
+			continue;
+		}
+#else				/* !USE_PAM */
 
 		/*
 		 * Get the password file entry for this user. The user must
@@ -573,12 +602,14 @@
 		fail_exit (1);
 	}
 
+	if (!use_stdout) {
 #ifndef USE_PAM
 	/* Save the changes */
 	close_files ();
 #endif
 
 	nscd_flush_cache ("passwd");
+	}
 
 	return (0);
 }
Index: shadow-4.1.4.1/man/chpasswd.8.xml
===================================================================
--- shadow-4.1.4.1.orig/man/chpasswd.8.xml
+++ shadow-4.1.4.1/man/chpasswd.8.xml
@@ -134,6 +134,12 @@
     </variablelist>
     <variablelist remap='IP'>
       <varlistentry>
+	<term><option>-S</option>, <option>--stdout</option></term>
+	<listitem>
+	  <para>Report encrypted passwords to stdout instead of updating password file.</para>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
 	<term><option>-h</option>, <option>--help</option></term>
 	<listitem>
 	  <para>Display help message and exit.</para>
