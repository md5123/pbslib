#
# StartOS package build script
#
# Copyright 2012 StartOS
# Distributed under the terms of the GNU General Public License v2
#

DESCRIPTION="Softwarefamily of powerful x86 virtualizatio (binary version)"
HOMEPAGE="http://www.virtualbox.org/"
LICENSE="GPL"
PACKAGER="Zhongxin Huang <huangzhongxin@ivali.com>"

case "$ARCH" in
    i?86)
        SRC_URI="http://download.virtualbox.org/virtualbox/"$V"/VirtualBox-"$V"-82870-Linux_x86.run"
        CHECKSUM="" ;;
    x86_64)
        SRC_URI="http://download.virtualbox.org/virtualbox/"$V"/VirtualBox-"$V"-82870-Linux_amd64.run"
        CHECKSUM="461c5ed0bd80f3d4cf51085261ea2d72" 
esac
        
PROVIDE="virtualbox-bin virtualbox-bin-kernel-source virtualbox-bin-kernel-module virtualbox-guest-additions"

BDEPEND="linux-kernel-headers glib2 libsdl libXcursor libXinerama libXmu python"

pbs_unpack() {
	runfile="$(basename $SRC_URI)"
	mkdir -p "$N-$V$R" 
	cd "$N-$V$R"
	origin_dir="$PWD"
	# Check and unpack the run package via sh
	sh "$YBS_SOURCE"/"$runfile" --check ||die "Unpack "$YBS_SOURCE"/"$runfile" failed!"
	echo yes |sh "$YBS_SOURCE"/"$runfile" --target . --nox11 --noexec
}

virtualbox-bin_install() {
	DESCRIPTION="Softwarefamily of powerful virtualization (binary version)"
	RDEPEND="virtualbox-bin-kernel-module(=4.2.6) glib2 libsdl libXcursor libXinerama libXmu python"
	INSTALL="$N.install"
	DESKTOPFILE="virtualbox.desktop"
	
	docp_rename vboxdrv.sh "$destdir"/etc/init.d/vboxdrv
	dodoc LICENSE

	mkdir -p "$destdir"/opt/VirtualBox
	tar xjf VirtualBox.tar.bz2 -C "$destdir"/opt/VirtualBox

	cd "$destdir"/opt/VirtualBox

	rm -rf additions
	
	# Hardened build: Mark binaries suid root, create symlinks for working around
	# unsupported $ORIGIN/.. in VBoxC.so and make sure the
	# directory is only writable by the user (paranoid).
	chmod 4511 VirtualBox VBox{SDL,Headless,NetDHCP}
	for lib in VBox{VMM,REM,RT,DDU,XPCOM}.so; do
		doln "/opt/VirtualBox/${lib}" "components/${lib}"
	done
	chmod go-w .

	# VBoxNetAdpCtl needs to be suid root in any case
	chmod 4511 VBoxNetAdpCtl

	# Replace VirtualBox built-in Qt by system Qt libraries 
	# depends on qt
	# for lib in libQt{Core,Gui,Network,OpenGL}; do
	#	rm "${lib}VBox.so.4"
	#	doln "/usr/lib/${lib}.so.4" "${lib}VBox.so.4"
	# done

	# Patch "vboxshell.py" to use Python 2.x instead of Python 3
	sed -i 's#/usr/bin/python#\02#' vboxshell.py

	# Install the SDK
	cd sdk/installer/
	VBOX_INSTALL_PATH="/opt/VirtualBox" python vboxapisetup.py install --root "${destdir}"
	rm -Rf build
	cd -

	# Replace init script stuff
	sed -i -e 's,sudo /etc/init.d/vboxdrv setup,/etc/rc.d/vboxdrv setup,g' VBox.sh
	sed -i -e 's,sudo /etc/init.d/vboxdrv restart,modprobe vboxdrv,g' VBox.sh

	# Install systemd rules
	docp "$filesdir"/10-vboxdrv.rules "$destdir"/etc/systemd/rules.d

	for bin in VirtualBox VBox{Headless,Manage,SDL,SVC,Tunctl,NetAdpCtl} rdesktop-vrdp; do
		doln "/opt/VirtualBox/${bin}" "${destdir}/usr/bin/${bin}"
	done

	# the desktop icon and ".desktop" files
	dodesktop "virtualbox.desktop" "icons/48x48/virtualbox.png"

	# Symlink mime info
	doln "/opt/VirtualBox/virtualbox.xml"  "${destdir}"/usr/share/mime/packages/virtualbox.xml

	# Setup configuration
	mkdir -p "${destdir}"/etc/vbox/
	echo 'INSTALL_DIR="/opt/VirtualBox"' > "${destdir}"/etc/vbox/vbox.cfg

	# Create the directory below if it doesn't exist
	install -d "${destdir}/var/run/VirtualBox"

	# For systemd
	dounit virtualbox.service
}

virtualbox-bin-kernel-module_install() {
	DESCRIPTION="virutalbox kernel modules"
	RDEPEND="linux-kernel(=3.6.8)"
	GROUP="driver"
	INSTALL="$N.install"

	# Install kernel modules
	cd src/vboxhost
	unset ARCH
	domake   ||exit 1
	docp vboxdrv.ko vboxnetadp.ko vboxnetflt.ko vboxpci.ko "$destdir"/lib/modules/"$KERNEL_DIST"/misc
	cd -
}

virtualbox-bin-kernel-source_install() {
	DESCRIPTION="virutalbox kernel source"
	RECOMMENDED="build-essential"
	YARCH="any"
	INSTALL="$N.install"
	
	cd "$origin_dir"
	tar xjf VirtualBox.tar.bz2
	cd src/vboxhost
	dosrc *
	cd -
}

virtualbox-guest-additions_install () {
	DESCRIPTION="Virtualbox guest additions iso file"
	YARCH="any"
	
	cd "$origin_dir"
	tar xjf VirtualBox.tar.bz2 additions
	domv additions "$destdir"/opt/VirtualBox/
	cd -
}

