--- skia/ext/SkFontHost_fontconfig.cpp.orig	2010-05-01 00:21:10.000000000 +0800
+++ skia/ext/SkFontHost_fontconfig.cpp	2010-05-11 22:11:26.000000000 +0800
@@ -127,7 +127,7 @@
         const unsigned fileid = UniqueIdToFileId(familyFace->uniqueID());
         if (!GetFcImpl()->Match(
           &resolved_family_name, NULL, true /* fileid valid */, fileid, "",
-          NULL, NULL)) {
+          NULL, NULL, NULL)) {
             return NULL;
         }
     } else if (familyName) {
@@ -136,14 +136,17 @@
 
     bool bold = style & SkTypeface::kBold;
     bool italic = style & SkTypeface::kItalic;
+    bool embedded_bitmap = style & SkTypeface::kEmbeddedBitmap;
     unsigned fileid;
     if (!GetFcImpl()->Match(NULL, &fileid, false, -1, /* no fileid */
-                               resolved_family_name, &bold, &italic)) {
+                               resolved_family_name, &bold, &italic,
+			       &embedded_bitmap)) {
         return NULL;
     }
     const SkTypeface::Style resulting_style = static_cast<SkTypeface::Style>(
         (bold ? SkTypeface::kBold : 0) |
-        (italic ? SkTypeface::kItalic : 0));
+        (italic ? SkTypeface::kItalic : 0) |
+	(embedded_bitmap ? SkTypeface::kEmbeddedBitmap : 0));
 
     const unsigned id = FileIdAndStyleToUniqueId(fileid, resulting_style);
     SkTypeface* typeface = SkNEW_ARGS(FontConfigTypeface, (resulting_style, id));
--- skia/ext/SkFontHost_fontconfig_direct.cpp.orig	2010-05-01 00:21:10.000000000 +0800
+++ skia/ext/SkFontHost_fontconfig_direct.cpp	2010-05-11 22:11:26.000000000 +0800
@@ -94,7 +94,7 @@
                              unsigned* result_fileid,
                              bool fileid_valid, unsigned fileid,
                              const std::string& family, bool* is_bold,
-                             bool* is_italic) {
+                             bool* is_italic, bool *has_embedded_bitmap) {
     if (family.length() > kMaxFontFamilyLength)
         return false;
 
@@ -185,8 +185,8 @@
       if (access(reinterpret_cast<char*>(c_filename), R_OK) != 0)
         continue;
 
-      match = current;
-      break;
+      match = FcFontRenderPrepare(NULL, pattern, current);
+      if (match) break;
     }
 
     if (!match) {
@@ -280,10 +280,16 @@
     const bool have_embolden =
         FcPatternGet(match, FC_EMBOLDEN, 0, &embolden) == 0;
 
+    FcBool bitmap = FcTrue;
+    if (FcPatternGetBool(match, FC_EMBEDDED_BITMAP, 0, &bitmap) != FcResultMatch)
+        bitmap = FcFalse;
+
     if (is_bold)
       *is_bold = resulting_bold > FC_WEIGHT_MEDIUM && !have_embolden;
     if (is_italic)
       *is_italic = resulting_italic > FC_SLANT_ROMAN && !have_matrix;
+    if (has_embedded_bitmap)
+      *has_embedded_bitmap = bitmap;
 
     if (result_family)
         *result_family = (char *) c_family;
--- skia/ext/SkFontHost_fontconfig_direct.h.orig	2010-05-01 00:21:10.000000000 +0800
+++ skia/ext/SkFontHost_fontconfig_direct.h	2010-05-11 22:11:26.000000000 +0800
@@ -31,7 +31,8 @@
     // FontConfigInterface implementation. Thread safe.
     virtual bool Match(std::string* result_family, unsigned* result_fileid,
                        bool fileid_valid, unsigned fileid,
-                       const std::string& family, bool* is_bold, bool* is_italic);
+                       const std::string& family, bool* is_bold,
+		       bool* is_italic, bool* has_embedded_bitmap);
     virtual int Open(unsigned fileid);
 
   private:
--- skia/ext/SkFontHost_fontconfig_impl.h.orig	2010-05-01 00:21:10.000000000 +0800
+++ skia/ext/SkFontHost_fontconfig_impl.h	2010-05-11 22:11:26.000000000 +0800
@@ -51,7 +51,8 @@
           unsigned fileid,
           const std::string& family,
           bool* is_bold,
-          bool* is_italic) = 0;
+          bool* is_italic,
+	  bool* has_embedded_bitmap) = 0;
 
     /** Open a font file given the fileid as returned by Match
      */
--- skia/ext/SkFontHost_fontconfig_ipc.cpp.orig	2010-05-01 00:21:10.000000000 +0800
+++ skia/ext/SkFontHost_fontconfig_ipc.cpp	2010-05-11 22:11:26.000000000 +0800
@@ -40,7 +40,7 @@
                           unsigned* result_fileid,
                           bool fileid_valid, unsigned fileid,
                           const std::string& family, bool* is_bold,
-                          bool* is_italic) {
+                          bool* is_italic, bool* has_embedded_bitmap) {
     if (family.length() > kMaxFontFamilyLength)
       return false;
 
@@ -51,7 +51,8 @@
       request.WriteUInt32(fileid);
 
     request.WriteBool(is_bold && *is_bold);
-    request.WriteBool(is_bold && *is_italic);
+    request.WriteBool(is_italic && *is_italic);
+    request.WriteBool(has_embedded_bitmap && *has_embedded_bitmap);
 
     request.WriteString(family);
 
@@ -71,11 +72,12 @@
 
     uint32_t reply_fileid;
     std::string reply_family;
-    bool resulting_bold, resulting_italic;
+    bool resulting_bold, resulting_italic, resulting_embedded_bitmap;
     if (!reply.ReadUInt32(&iter, &reply_fileid) ||
         !reply.ReadString(&iter, &reply_family) ||
         !reply.ReadBool(&iter, &resulting_bold) ||
-        !reply.ReadBool(&iter, &resulting_italic)) {
+        !reply.ReadBool(&iter, &resulting_italic)||
+	!reply.ReadBool(&iter, &resulting_embedded_bitmap)) {
       return false;
     }
 
@@ -87,6 +89,8 @@
       *is_bold = resulting_bold;
     if (is_italic)
       *is_italic = resulting_italic;
+    if (has_embedded_bitmap)
+      *has_embedded_bitmap = resulting_embedded_bitmap;
 
     return true;
 }
--- skia/ext/SkFontHost_fontconfig_ipc.h.orig	2010-05-01 00:21:10.000000000 +0800
+++ skia/ext/SkFontHost_fontconfig_ipc.h	2010-05-11 22:11:26.000000000 +0800
@@ -33,7 +33,8 @@
     // FontConfigInterface implementation.
     virtual bool Match(std::string* result_family, unsigned* result_fileid,
                        bool fileid_valid, unsigned fileid,
-                       const std::string& family, bool* is_bold, bool* is_italic);
+                       const std::string& family, bool* is_bold,
+		       bool* is_italic, bool* has_embedded_bitmap);
     virtual int Open(unsigned fileid);
 
     enum Method {
--- chrome/browser/renderer_host/render_sandbox_host_linux.cc.orig	2010-05-01 00:22:17.000000000 +0800
+++ chrome/browser/renderer_host/render_sandbox_host_linux.cc	2010-05-11 22:12:14.000000000 +0800
@@ -152,7 +152,7 @@
                               std::vector<int>& fds) {
     bool fileid_valid;
     uint32_t fileid;
-    bool is_bold, is_italic;
+    bool is_bold, is_italic, has_embedded_bitmap;
     std::string family;
 
     if (!pickle.ReadBool(&iter, &fileid_valid))
@@ -162,6 +162,7 @@
         return;
     }
     if (!pickle.ReadBool(&iter, &is_bold) ||
+        !pickle.ReadBool(&iter, &has_embedded_bitmap) ||
         !pickle.ReadBool(&iter, &is_italic) ||
         !pickle.ReadString(&iter, &family)) {
       return;
@@ -172,7 +173,7 @@
 
     const bool r = font_config_->Match(
         &result_family, &result_fileid, fileid_valid, fileid, family, &is_bold,
-        &is_italic);
+        &is_italic, &has_embedded_bitmap);
 
     Pickle reply;
     if (!r) {
@@ -183,6 +184,7 @@
       reply.WriteString(result_family);
       reply.WriteBool(is_bold);
       reply.WriteBool(is_italic);
+      reply.WriteBool(has_embedded_bitmap);
     }
     SendRendererReply(fds, reply, -1);
   }
