Description: Avoid call to setlocale() when used from library
Author: Andrew Tridgell <tridge@samba.org>, Andrew Bartlett <abartlet@samba.org>
Origin: upstream, commit:13470f11ee47da446eb7094c29dbc8ff402aede9,
  commit:1ad8e5229f618fc04af371ba52b81f2e7e1f88f5
Bug: https://bugzilla.samba.org/show_bug.cgi?id=7519

=== modified file 'lib/util/charset/charcnv.c'
--- old/lib/util/charset/charcnv.c	2010-10-15 01:32:48 +0000
+++ new/lib/util/charset/charcnv.c	2011-02-27 15:19:39 +0000
@@ -139,16 +139,6 @@
 
 	if (initialised == false) {
 		initialised = true;
-		
-#ifdef LC_ALL
-		/* we set back the locale to C to get ASCII-compatible
-		   toupper/lower functions.  For now we do not need
-		   any other POSIX localisations anyway. When we
-		   should really need localized string functions one
-		   day we need to write our own ascii_tolower etc.
-		*/
-		setlocale(LC_ALL, "C");
-#endif
 	}
 
 	if (ic->conv_handles[from][to]) {

=== modified file 'lib/util/charset/charset.h'
--- old/lib/util/charset/charset.h	2011-01-25 09:22:16 +0000
+++ new/lib/util/charset/charset.h	2011-02-27 15:20:11 +0000
@@ -215,6 +215,7 @@
 			      const char *fromcode, bool native_iconv);
 
 void load_case_tables(void);
+void load_case_tables_library(void);
 bool charset_register_backend(const void *_funcs);
 
 /*

=== modified file 'lib/util/charset/codepoints.c'
--- old/lib/util/charset/codepoints.c	2010-09-08 03:30:03 +0000
+++ new/lib/util/charset/codepoints.c	2011-02-27 15:19:42 +0000
@@ -35,8 +35,10 @@
 
 /*******************************************************************
 load the case handling tables
+
+This is the function that should be called from library code.
 ********************************************************************/
-void load_case_tables(void)
+void load_case_tables_library(void)
 {
 	TALLOC_CTX *mem_ctx;
 
@@ -63,6 +65,24 @@
 	}
 }
 
+/*******************************************************************
+load the case handling tables
+
+This MUST only be called from main() in application code, never from a
+library.  We don't know if the calling program has already done
+setlocale() to another value, and can't tell if they have.
+********************************************************************/
+void load_case_tables(void)
+{
+	/* This is a useful global hook where we can ensure that the
+	 * locale is set from the environment.  This is needed so that
+	 * we can use LOCALE as a codepage */
+#ifdef HAVE_SETLOCALE
+	setlocale(LC_ALL, "");
+#endif
+	load_case_tables_library();
+}
+
 /**
  Convert a codepoint_t to upper case.
 **/
@@ -72,7 +92,7 @@
 		return toupper(val);
 	}
 	if (upcase_table == NULL) {
-		load_case_tables();
+		load_case_tables_library();
 	}
 	if (upcase_table == (void *)-1) {
 		return val;
@@ -92,7 +112,7 @@
 		return tolower(val);
 	}
 	if (lowcase_table == NULL) {
-		load_case_tables();
+		load_case_tables_library();
 	}
 	if (lowcase_table == (void *)-1) {
 		return val;

=== modified file 'nsswitch/wins.c'
--- old/nsswitch/wins.c	2010-10-15 01:32:48 +0000
+++ new/nsswitch/wins.c	2011-02-27 15:19:42 +0000
@@ -48,7 +48,7 @@
 static void nss_wins_init(void)
 {
 	initialised = 1;
-	load_case_tables();
+	load_case_tables_library();
 	lp_set_cmdline("log level", "0");
 
 	TimeInit();

