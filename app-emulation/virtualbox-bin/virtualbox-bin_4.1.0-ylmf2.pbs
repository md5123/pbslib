#
# Ylmf OS package build script
#

DESCRIPTION="Softwarefamily of powerful x86 virtualizatio (binary version)"
HOMEPAGE="http://www.virtualbox.org/"
LICENSE="GPL"
PACKAGER="Ylmf OS Developers <ylmfos@115.com>"

SRC_URI="http://dlc.sun.com.edgesuite.net/virtualbox/"$V"/VirtualBox-"$V"-73009-Linux_x86.run"

RDEPEND=""
BDEPEND="bin86 dev86 acpica"
OPINION="nodev"
RECOMMENDED=""

INSTALL="$N.install"

DESKTOPFILE="virtualbox.desktop"

PROVIDE="$N-kernel-source virtualbox-guest-additions"

pbs_config() {
	runfile=""$(basename $SRC_URI)""
	mkdir -p "$N-$V$R" 
	cd "$N-$V$R"

	#Check and unpack the run package via sh(1)
	sh "$YPPATH_SOURCE"/"$runfile" --check
	echo yes |sh "$YPPATH_SOURCE"/"$runfile" --target . --nox11 --noexec 

	#
	origin_dir="$PWD"
}

pbs_install() {
	docp_rename vboxdrv.sh "$destdir"/etc/init.d/vboxdrv
	dodoc LICENSE

	#
	mkdir -p "$destdir"/opt/VirtualBox
	tar -xjf VirtualBox.tar.bz2 -C "$destdir"/opt/VirtualBox

	cd "$destdir"/opt/VirtualBox

	# 
	rm -rf additions
	
	# Install kernel modules
	cd src/vboxhost
	unset ARCH
	domake 
	docp vboxdrv.ko vboxnetadp.ko vboxnetflt.ko vboxpci.ko "$destdir"/lib/modules/"$(uname -r)"/kernel/misc
	cd -

	# Hardened build: Mark binaries suid root, create symlinks for working around
	# unsupported $ORIGIN/.. in VBoxC.so and make sure the
	# directory is only writable by the user (paranoid).
	chmod 4511 VirtualBox VBox{SDL,Headless,NetDHCP}
	for lib in VBox{VMM,REM,RT,DDU,XPCOM}.so; do
		doln "/opt/VirtualBox/${lib}" "components/${lib}"
	done
	chmod go-w .

	# VBoxNetAdpCtl needs to be suid root in any case
	chmod 4511 VBoxNetAdpCtl

	# Replace VirtualBox built-in Qt by system Qt libraries 
	# depends on qt-core
	# for lib in libQt{Core,Gui,Network,OpenGL}; do
	#	rm "${lib}VBox.so.4"
	#	doln "/usr/lib/${lib}.so.4" "${lib}VBox.so.4"
	# done

	# Patch "vboxshell.py" to use Python 2.x instead of Python 3
	sed -i 's#/usr/bin/python#\02#' vboxshell.py

	# Install the SDK
	cd sdk/installer/
	VBOX_INSTALL_PATH="/opt/VirtualBox" python vboxapisetup.py install --root "${destdir}"
	rm -Rf build
	cd -

	# Replace init script stuff
	sed -i -e 's,sudo /etc/init.d/vboxdrv setup,/etc/rc.d/vboxdrv setup,g' VBox.sh
	sed -i -e 's,sudo /etc/init.d/vboxdrv restart,modprobe vboxdrv,g' VBox.sh

	# Install udev rules
	docp $filesdir/10-vboxdrv.rules "$destdir"/etc/udev/rules.d

	#
	for bin in VirtualBox VBox{Headless,Manage,SDL,SVC,Tunctl,NetAdpCtl} rdesktop-vrdp; do
		doln "/opt/VirtualBox/${bin}" "${destdir}/usr/bin/${bin}"
	done

	# the desktop icon and ".desktop" files
	dodesktop "virtualbox.desktop" "icons/48x48/virtualbox.png"

	# Symlink mime info
	doln "/opt/VirtualBox/virtualbox.xml"  "${destdir}"/usr/share/mime/packages/virtualbox.xml

	# Setup configuration
	mkdir -p "${destdir}"/etc/vbox/
	echo 'INSTALL_DIR="/opt/VirtualBox"' > "${destdir}"/etc/vbox/vbox.cfg

	# Create the directory below if it doesn't exist
	install -d "${destdir}/var/run/VirtualBox"

	# For systemd
	dounit virtualbox.service

	# FIXME 
	# virtualbox 4.1.0: 
	#    vboxdrv: unable to handle kernel paging request.
	#    https://bugs.launchpad.net/ubuntu/+source/virtualbox-ose/+bug/708968
	# so rmmod module at shutdown time.
	#
	docp $filesdir/virtualbox.conf "${destdir}"/etc/modules-unload.d/
}

virtualbox-bin-kernel-source_install() {
	DESCRIPTION="virutalbox kernel source"
	RECOMMENDED="build-essential"
	OPINION="nodev"
	YARCH="any"

	INSTALL="$N.install"
	
	cd $origin_dir
	tar -xjf VirtualBox.tar.bz2
	cd src/vboxhost
	dosrc *
}

virtualbox-guest-additions_install () {
	DESCRIPTION="Virtualbox guest additions iso file"
	YARCH="any"
	
	cd $origin_dir
	mkdir -p "$destdir"/opt/VirtualBox
	tar -xjf VirtualBox.tar.bz2 additions -C "$destdir"/opt/VirtualBox/
}

