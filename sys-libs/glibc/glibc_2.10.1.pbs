#
# YLmf_OS package build script
#

DESCRIPTION="GNU libc6 (also called glibc2) C library"
HOMEPAGE="http://www.gnu.org/software/libc/libc.html"
 
SRC_URI="http://ftp.gnu.org/gnu/glibc/"$N-$V$R".tar.bz2"

RDEPEND=""
BDEPEND="${RDEPEND}"

pbs_unpack() {
        ypkg_unpack
}

pbs_config() {
	#fix a potential issue : bash infinite loop. 
	sed -i '/vi_VN.TCVN/d' localedata/SUPPORTED
	#fix sh problem if other shell installed.
	sed -i 's|@BASH@|/bin/bash|' elf/ldd.bash.in
	mkdir ../build
	cd ../build
	YPB_CONFIG+="--disable-profile 
		     --enable-add-ons 
	 	     --enable-kernel=2.6.0 
		     --libexecdir=/usr/lib/glibc"
	ypkg_config
}

pbs_build() {
	ypkg_make 
}
glibc_nsswitch_conf()
{
cat > "$YPPATH_DEST"/etc/nsswitch.conf << "EOF"
passwd: files
group: files
shadow: files
hosts: files dns
networks: files
protocols: files
services: files
ethers: files
rpc: files
EOF
}
glibc_ld_so_conf()
{
cat > "$YPPATH_DEST"/etc/ld.so.conf << "EOF"
/usr/local/lib
/opt/lib
EOF
}

pbs_install()
{
	make install_root=$YPPATH_DEST install
	#add nsswitch.conf / glibc.ld.so
	glibc_nsswitch_conf
	glibc_ld_so_conf
	#config timezone.
	cp -v --remove-destination "$YPPATH_DEST"/usr/share/zoneinfo/Asia/Shanghai \
		"$YPPATH_DEST"/etc/localtime
}
glib_adjust_toolchain()
{
	local file
	echo "Begin adjust tool chain..."
	#adjust tool chain.
	[ -f /tools/bin/ld-new ] && cp  /tools/bin/{ld-new,ld}
	rm -f /tools/$(gcc -dumpmachine)/bin/ld
	[ -f /tools/bin/ld ] && ln -sv /tools/bin/ld \
		/tools/$(gcc -dumpmachine)/bin/ld
	#gcc libs.
	for i in $(ls /tools/lib/libgcc_s.so* 2>/dev/null)
	do
		file=${i##*/}
		[ -f $file ] || ln -sv $i /usr/lib 
	done
	for i in $(ls /tools/lib/libstdc++.* 2>/dev/null)
	do
		file=${i##*/}
		[ -f $file ] || ln -sv $i /usr/lib 
	done
	#adjust gcc.
	echo 'main(){}' > dummy.c
	cc dummy.c -v -Wl,--verbose &> dummy.log
	readelf -l a.out | grep ': /lib'
	if [ "$?" != "0" ]; then
		echo "change specs.."
		gcc -dumpspecs | sed \
			-e 's@/tools/lib/ld-linux.so.2@/lib/ld-linux.so.2@g' \
			-e '/\*startfile_prefix_spec:/{n;s@.*@/usr/lib/ @}' \
			-e '/\*cpp:/{n;s@$@ -isystem /usr/include@}' > \
			`dirname $(gcc --print-libgcc-file-name)`/specs
	fi
	#check agian
	echo 'main(){}' > dummy.c
	cc dummy.c -v -Wl,--verbose &> dummy.log
	readelf -l a.out | grep ': /lib'
	grep -o '/usr/lib.*/crt[1in].*succeeded' dummy.log
	grep -B1 '^ /usr/include' dummy.log
}

pbs_postinst()
{
	#install locale
	echo "Install locales.."
	mkdir -pv /usr/lib/locale
	localedef -i en_US -f ISO-8859-1 en_US
	localedef -i en_US -f UTF-8 en_US.UTF-8
	localedef -i zh_CN -f GB2312 zh_CN.GB2312
	localedef -i zh_CN -f UTF-8 zh_CN.UTF-8
	
	glib_adjust_toolchain
}

pbs_prerm()
{
	echo "Remove links..."
	#remove links
	for i in $(ls /usr/lib/libgcc_s.so* 2>/dev/null)
	do
		[ -L $i ] && unlink $i
	done
	for i in $(ls /usr/lib/libstdc++.* 2>/dev/null)
	do
		[ -L $i ] && unlink $i
	done
	#remove locale
	rm -rf /usr/lib/locale
	return 0
}

pbs_postrm()
{
	return 0
}
