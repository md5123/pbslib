#
# YLmf_OS package build script
#

DESCRIPTION="console display library"
HOMEPAGE="http://www.gnu.org/software/ncurses/"
LICENSE="MIT"
PACKAGER="Ylmf OS Developers <ylmfos@115.com>"

SRC_URI="http://ftp.gnu.org/pub/gnu/"$N"/"$N-$V".tar.gz"

RDEPEND="glibc"
BDEPEND=""

pbs_unpack() {
        ypkg_unpack
}

pbs_config() {
	# Patch contains updates from the 5.9 branch by the Ncurses developers
	ypkg_patch ncurses-5.9-branch_update-2.patch
	
	mkdir -p "$N"w-build && pushd "$N"w-build 
	YPB_CONFIG+="--with-shared
	             --with-normal
	             --without-debug
		     --without-ada 
	             --enable-widec"
	
	../configure $YPB_CONFIG
	ypkg_make
	popd

	# libncurses.so.5 for external binary support 
	mkdir -p "$N"-build &&  pushd "$N"-build 
	[ $ARCH = "x86_64" ] && CONFIGFLAG="--with-chtype=long"
	YPB_CONFIG="--prefix=/usr 
	            --with-shared 
		    --with-normal 
		    --without-debug 
		    --without-ada
	            "$CONFIGFLAG""

	../configure $YPB_CONFIG	    
	ypkg_make
	popd
}

pbs_install() {
	# Install license, rip it from the readme
	grep -B 100 '$Id' README >license.txt
	ypkg_dodoc license.txt
	
	pushd "$N"w-build
	ypkg_mkinstall
	ypkg_doln /usr/lib/libncursesw.so.5 "$YPPATH_DEST"/usr/lib/libncursesw.so
	popd

	# non-widec compatibility library
	pushd "$N"-build
	ypkg_doln /usr/lib/libncurses.so."$V" "$YPPATH_DEST"/usr/lib/libncurses.so.5


	cd  "$YPPATH_DEST"

 	# move libraries needed for boot to /lib (we call tput in initscripts)
        ypkg_doln /usr/lib/libncursesw.so.5 usr/lib/libncursesw.so

        # Fool packages looking to link to non-wide-character ncurses libraries
	for lib in curses ncurses form panel menu; do
		rm -f usr/lib/lib"${lib}".so
	        echo "INPUT(-l${lib}w)" >usr/lib/lib"${lib}".so
  	        ypkg_doln /usr/lib/lib"${lib}"w.a usr/lib/lib"${lib}".a
	done
	ypkg_doln /usr/lib/libncurses++w.a usr/lib/libncurses++.a

	# Some packages look for -lcurses during build
	rm -f usr/lib/libcursesw.so
	echo "INPUT(-lncursesw)" >usr/lib/libcursesw.so
	ypkg_doln /usr/lib/libncurses.so usr/lib/libcurses.so
	ypkg_doln /usr/lib/libncursesw.a usr/lib/libcursesw.a
	ypkg_doln /usr/lib/libncurses.a  usr/lib/libcurses.a

	# Create a symlink for /usr/share/terminfo in /usr/lib for compatibility
	ypkg_doln /usr/share/terminfo usr/lib/terminfo

	#ypkg_doln /usr/lib"$LIBDIRSUFFIX"/libcurses.so        usr/lib"$LIBDIRSUFFIX"/libcursesw.so
	#ypkg_doln /usr/lib"$LIBDIRSUFFIX"/libncurses.so       usr/lib"$LIBDIRSUFFIX"/libcurses.so
	#ypkg_doln /usr/lib"$LIBDIRSUFFIX"/libncursesw.a       usr/lib"$LIBDIRSUFFIX"/libcursesw.a
	#ypkg_doln /usr/lib"$LIBDIRSUFFIX"/libncurses.a        usr/lib"$LIBDIRSUFFIX"/libcurses.a
	#ypkg_doln /usr/lib"$LIBDIRSUFFIX"/libncurses++w.a     usr/lib"$LIBDIRSUFFIX"/libncurses++.a

#	case $ARCH in
#		i?86) 
#	# Prepare ncursesw5-config to be wrapped by the multiarch wrapper
#	mv usr/bin/ncursesw5-config{,-32} ;;
#		x86_64)
#	mv usr/bin/ncursesw5-config{,-64}
#	ypkg_doln /usr/bin/multiarch_wrapper usr/bin/ncursesw5-config
#	esac
}

