diff -Nurb likewise-open.old/lsass/server/auth-providers/local-provider/lpdomain.c likewise-open.new/lsass/server/auth-providers/local-provider/lpdomain.c
--- likewise-open.old/lsass/server/auth-providers/local-provider/lpdomain.c	2011-06-29 14:48:49.000000000 -0700
+++ likewise-open.new/lsass/server/auth-providers/local-provider/lpdomain.c	2011-06-29 15:05:39.000000000 -0700
@@ -95,7 +95,6 @@
     HANDLE hDirectory = NULL;
     PSTR pszFilterFmt = LOCAL_DB_DIR_ATTR_OBJECT_CLASS " = %u";
     DWORD dwDomainObjectClass = LOCAL_OBJECT_CLASS_DOMAIN;
-    PSTR pszFilter = NULL;
     PWSTR pwszFilter = NULL;
     WCHAR wszAttrDn[] = LOCAL_DIR_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrDomain[] = LOCAL_DIR_ATTR_DOMAIN;
@@ -387,17 +386,12 @@
                     ulMethod);
     BAIL_ON_LSA_ERROR(dwError);
 
-    dwError = LwAllocateStringPrintf(
-                    &pszFilter,
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                    &pwszFilter,
                     pszFilterFmt,
                     dwDomainObjectClass);
     BAIL_ON_LSA_ERROR(dwError);
 
-    dwError = LwMbsToWc16s(
-                    pszFilter,
-                    &pwszFilter);
-    BAIL_ON_LSA_ERROR(dwError);
-
     dwError = DirectorySearch(
                     hDirectory,
                     NULL,
@@ -673,7 +667,6 @@
         DirectoryFreeEntries(pEntries, dwNumEntries);
     }
 
-    LW_SAFE_FREE_MEMORY(pszFilter);
     LW_SAFE_FREE_MEMORY(pwszFilter);
 
     if (dwError == ERROR_SUCCESS &&
@@ -705,7 +698,6 @@
     HANDLE hDirectory  = NULL;
     DWORD  objectClass = LOCAL_OBJECT_CLASS_DOMAIN;
     PCSTR  pszFilterTemplate = LOCAL_DB_DIR_ATTR_OBJECT_CLASS " = %u";
-    PSTR   pszFilter = NULL;
     PWSTR  pwszFilter = NULL;
     wchar16_t wszAttrNameDomain[]      = LOCAL_DIR_ATTR_DOMAIN;
     wchar16_t wszAttrNameNetBIOSName[] = LOCAL_DIR_ATTR_NETBIOS_NAME;
@@ -734,17 +726,12 @@
     LONG64 llMaxPwdAge = 0;
     LONG64 llPwdChangeTime = 0;
 
-    dwError = LwAllocateStringPrintf(
-                    &pszFilter,
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                    &pwszFilter,
                     pszFilterTemplate,
                     objectClass);
     BAIL_ON_LSA_ERROR(dwError);
 
-    dwError = LwMbsToWc16s(
-                    pszFilter,
-                    &pwszFilter);
-    BAIL_ON_LSA_ERROR(dwError);
-
     dwError = DirectoryOpen(&hDirectory);
     BAIL_ON_LSA_ERROR(dwError);
 
@@ -858,9 +845,7 @@
         DirectoryClose(hDirectory);
     }
 
-    LW_SAFE_FREE_STRING(pszFilter);
     LW_SAFE_FREE_STRING(pszDomainSID);
-    LW_SAFE_FREE_STRING(pszFilter);
     LW_SAFE_FREE_MEMORY(pwszFilter);
 
     return dwError;
@@ -957,7 +942,7 @@
     IN PCSTR  pszNewDomainName
     )
 {
-    const wchar_t wszDomainFilterFmt[] = L"%ws=%d";
+    const wchar_t wszDomainFilterFmt[] = L"%ws=%u";
     const DWORD dwInt32StrSize = 10;
 
     DWORD dwError = 0;
@@ -1180,7 +1165,7 @@
     IN PCSTR  pszSid
     )
 {
-    const wchar_t wszDomainFilterFmt[] = L"%ws=%d";
+    const wchar_t wszDomainFilterFmt[] = L"%ws=%u";
     const DWORD dwInt32StrSize = 10;
 
     DWORD dwError = 0;
diff -Nurb likewise-open.old/lsass/server/auth-providers/local-provider/lpgroup.c likewise-open.new/lsass/server/auth-providers/local-provider/lpgroup.c
--- likewise-open.old/lsass/server/auth-providers/local-provider/lpgroup.c	2011-06-29 14:48:49.000000000 -0700
+++ likewise-open.new/lsass/server/auth-providers/local-provider/lpgroup.c	2011-06-29 15:05:39.000000000 -0700
@@ -185,10 +185,9 @@
     PWSTR pwszSamAccountName = NULL;
     PWSTR pwszDomain = NULL;
     PWSTR pwszNetBIOSDomain = NULL;
-    size_t sGroupDNLen = 0;
-    DWORD dwFilterLen = 0;
+    PSTR pszGroupDn = NULL;
     PWSTR pwszFilter = NULL;
-    wchar_t wszFilterFmt[] = L"%ws = '%ws'";
+    PCSTR filterFormat = LOCAL_DB_DIR_ATTR_DISTINGUISHED_NAME " = %Q";
     PWSTR pwszBase = NULL;
     DWORD dwScope = 0;
 
@@ -280,25 +279,16 @@
                     mods);
     BAIL_ON_LSA_ERROR(dwError);
 
-    dwError = LwWc16sLen(pwszGroupDN,
-                         &sGroupDNLen);
-    BAIL_ON_LSA_ERROR(dwError);
-
-    dwFilterLen = (sizeof(wszAttrDistinguishedName) - 2) +
-                  (sGroupDNLen * sizeof(WCHAR)) +
-                   sizeof(wszFilterFmt);
-
-    dwError = LwAllocateMemory(
-                    dwFilterLen,
-                    OUT_PPVOID(&pwszFilter));
+    dwError = LwWc16sToMbs(
+                    pwszGroupDN,
+                    &pszGroupDn);
     BAIL_ON_LSA_ERROR(dwError);
 
-    if (sw16printfw(pwszFilter, dwFilterLen/sizeof(WCHAR), wszFilterFmt,
-                    wszAttrDistinguishedName, pwszGroupDN) < 0)
-    {
-        dwError = LwErrnoToWin32Error(errno);
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                    &pwszFilter,
+                    filterFormat,
+                    pszGroupDn);
         BAIL_ON_LSA_ERROR(dwError);
-    }
 
     dwError = DirectorySearch(
                     pContext->hDirectory,
@@ -376,6 +366,8 @@
     }
 
     LW_SAFE_FREE_MEMORY(pwszGroupDN);
+    LW_SAFE_FREE_MEMORY(pszGroupDn);
+    LW_SAFE_FREE_MEMORY(pwszFilter);
     LW_SAFE_FREE_MEMORY(pwszSamAccountName);
     LW_SAFE_FREE_MEMORY(pwszDomain);
     LW_SAFE_FREE_MEMORY(pwszNetBIOSDomain);
@@ -451,9 +443,10 @@
     DWORD dwObjectClassLocalUser = LOCAL_OBJECT_CLASS_USER;
     PWSTR pwszBase = NULL;
     ULONG ulScope = 0;
-    wchar_t wszFilterFmtSidOnly[] = L"(%ws=%u OR %ws=%u) AND %ws=\'%ws\'";
+    PCSTR filterFormatSidOnly = "(" LOCAL_DB_DIR_ATTR_OBJECT_CLASS "=%u OR "
+                                    LOCAL_DB_DIR_ATTR_OBJECT_CLASS "=%u) AND "
+                                 LOCAL_DB_DIR_ATTR_OBJECT_SID "=%Q";
     PWSTR pwszFilter = NULL;
-    DWORD dwFilterLen = 0;
     WCHAR wszAttrObjectClass[] = LOCAL_DIR_ATTR_OBJECT_CLASS;
     WCHAR wszAttrDistinguishedName[] = LOCAL_DIR_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrObjectSid[] = LOCAL_DIR_ATTR_OBJECT_SID;
@@ -551,31 +544,18 @@
             dwError = LocalDirCheckLocalOrBuiltinSid(
                             pszSID,
                             &bIsLocalOrBuiltinSid);
+            BAIL_ON_LSA_ERROR(dwError);
 
             bForeignSid = !bIsLocalOrBuiltinSid;
 
-            dwError = LwMbsToWc16s(pszSID, &pwszSID);
-            BAIL_ON_LSA_ERROR(dwError);
-
-            dwFilterLen = (sizeof(wszAttrObjectClass) - 2) +
-                           10 +
-                          (sizeof(wszAttrObjectClass) - 2) +
-                           10 +
-                          (sizeof(wszAttrObjectSid) - 2) +
-                          (wc16slen(pwszSID) * sizeof(WCHAR)) +
-                          sizeof(wszFilterFmtSidOnly);
-
-            dwError = LwAllocateMemory(
-                        dwFilterLen,
-                        (PVOID*)&pwszFilter);
+            dwError = DirectoryAllocateWC16StringFilterPrintf(
+                        &pwszFilter,
+                        filterFormatSidOnly,
+                        dwObjectClassGroupMember,
+                        dwObjectClassLocalUser,
+                        pszSID);
             BAIL_ON_LSA_ERROR(dwError);
 
-            sw16printfw(pwszFilter, dwFilterLen/sizeof(WCHAR),
-                        wszFilterFmtSidOnly,
-                        wszAttrObjectClass, dwObjectClassGroupMember,
-                        wszAttrObjectClass, dwObjectClassLocalUser,
-                        wszAttrObjectSid, pwszSID);
-
             dwError = DirectorySearch(
                         pContext->hDirectory,
                         pwszBase,
@@ -590,6 +570,9 @@
             if (dwNumEntries == 0 &&
                 bForeignSid)
             {
+                dwError = LwMbsToWc16s(pszSID, &pwszSID);
+                BAIL_ON_LSA_ERROR(dwError);
+
                 dwError = LocalDirCreateForeignPrincipalDN(hProvider,
                                                            pwszSID,
                                                            &pwszDN);
@@ -665,28 +648,14 @@
         {
             pszSID = pGroupModInfo->ppszRemoveMembers[i];
 
-            dwError = LwMbsToWc16s(pszSID, &pwszSID);
-            BAIL_ON_LSA_ERROR(dwError);
-
-            dwFilterLen = (sizeof(wszAttrObjectClass) - 1) +
-                           10 +
-                          (sizeof(wszAttrObjectClass) - 2) +
-                           10 +
-                          (sizeof(wszAttrObjectSid) - 1) +
-                          (strlen(pszSID) * sizeof(WCHAR)) +
-                          sizeof(wszFilterFmtSidOnly);
-
-            dwError = LwAllocateMemory(
-                        dwFilterLen,
-                        (PVOID*)&pwszFilter);
+            dwError = DirectoryAllocateWC16StringFilterPrintf(
+                        &pwszFilter,
+                        filterFormatSidOnly,
+                        dwObjectClassGroupMember,
+                        dwObjectClassLocalUser,
+                        pszSID);
             BAIL_ON_LSA_ERROR(dwError);
 
-            sw16printfw(pwszFilter, dwFilterLen/sizeof(WCHAR),
-                        wszFilterFmtSidOnly,
-                        wszAttrObjectClass, dwObjectClassGroupMember,
-                        wszAttrObjectClass, dwObjectClassLocalUser,
-                        wszAttrObjectSid, pwszSID);
-
             dwError = DirectorySearch(
                         pContext->hDirectory,
                         pwszBase,
@@ -722,12 +691,6 @@
                 pwszDN = NULL;
             }
 
-            if (pwszSID)
-            {
-                LW_SAFE_FREE_MEMORY(pwszSID);
-                pwszDN = NULL;
-            }
-
             if (pwszFilter)
             {
                 LW_SAFE_FREE_MEMORY(pwszFilter);
@@ -746,21 +709,9 @@
 
     LsaUtilFreeSecurityObjectList(1, ppObjects);
 
-    if (pwszFilter)
-    {
         LW_SAFE_FREE_MEMORY(pwszFilter);
-    }
-
-    if (pwszDN)
-    {
         LW_SAFE_FREE_MEMORY(pwszDN);
-    }
-
-    if (pwszSID)
-    {
         LW_SAFE_FREE_MEMORY(pwszSID);
-    }
-
     LW_SAFE_FREE_MEMORY(pwszGroupDN);
 
     if (pMember)
@@ -1007,12 +958,13 @@
     PWSTR  pwszGroupDN
     )
 {
-    const wchar_t wszFilterTemplate[] = L"%ws=%u AND %ws='%ws'";
+    PCSTR filterTemplate = LOCAL_DB_DIR_ATTR_OBJECT_CLASS "=%u AND "
+                           LOCAL_DB_DIR_ATTR_DISTINGUISHED_NAME "=%Q";
     DWORD dwError = 0;
     PLOCAL_PROVIDER_CONTEXT pContext = (PLOCAL_PROVIDER_CONTEXT)hProvider;
-    WCHAR wszAttrNameDN[] = LOCAL_DIR_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrNameObjectClass[] = LOCAL_DIR_ATTR_OBJECT_CLASS;
     WCHAR wszAttrNameObjectSid[] = LOCAL_DIR_ATTR_OBJECT_SID;
+    PSTR pszGroupDn = NULL;
     PWSTR pwszFilter = NULL;
     PDIRECTORY_ENTRY pEntry = NULL;
     DWORD dwNumEntries = 0;
@@ -1025,11 +977,16 @@
         NULL
     };
 
-    dwError = LwAllocateWc16sPrintfW(
+    dwError = LwWc16sToMbs(
+                    pwszGroupDN,
+                    &pszGroupDn);
+    BAIL_ON_LSA_ERROR(dwError);
+
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
                     &pwszFilter,
-                    wszFilterTemplate,
-                    wszAttrNameObjectClass, LOCAL_OBJECT_CLASS_GROUP,
-                    wszAttrNameDN, pwszGroupDN);
+                    filterTemplate,
+                    LOCAL_OBJECT_CLASS_GROUP,
+                    pszGroupDn);
     BAIL_ON_LSA_ERROR(dwError);
 
     dwError = DirectorySearch(
@@ -1080,6 +1037,7 @@
         DirectoryFreeEntries(pEntry, dwNumEntries);
     }
 
+    LW_SAFE_FREE_MEMORY(pszGroupDn);
     LW_SAFE_FREE_MEMORY(pwszFilter);
     LW_SAFE_FREE_MEMORY(pGroupSid);
 
diff -Nurb likewise-open.old/lsass/server/auth-providers/local-provider/lpobject.c likewise-open.new/lsass/server/auth-providers/local-provider/lpobject.c
--- likewise-open.old/lsass/server/auth-providers/local-provider/lpobject.c	2011-06-29 14:48:49.000000000 -0700
+++ likewise-open.new/lsass/server/auth-providers/local-provider/lpobject.c	2011-06-29 15:05:39.000000000 -0700
@@ -73,25 +73,19 @@
     PDIRECTORY_ENTRY pEntry = NULL;
     DWORD dwNumEntries = 0;
     PCSTR pszFilterTemplate =
-                    LOCAL_DB_DIR_ATTR_SAM_ACCOUNT_NAME " = \"%s\"" \
-                    " AND " LOCAL_DB_DIR_ATTR_DOMAIN   " = \"%s\"";
-    PSTR pszFilter = NULL;
+                    LOCAL_DB_DIR_ATTR_SAM_ACCOUNT_NAME " = %Q" \
+                    " AND " LOCAL_DB_DIR_ATTR_DOMAIN   " = %Q";
     PWSTR pwszFilter = NULL;
     PWSTR pwszObjectDN = NULL;
     DWORD dwObjectClass = LOCAL_OBJECT_CLASS_UNKNOWN;
 
-    dwError = LwAllocateStringPrintf(
-                    &pszFilter,
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                    &pwszFilter,
                     pszFilterTemplate,
                     pszName,
                     pszDomainName);
     BAIL_ON_LSA_ERROR(dwError);
 
-    dwError = LwMbsToWc16s(
-                    pszFilter,
-                    &pwszFilter);
-    BAIL_ON_LSA_ERROR(dwError);
-
     dwError = DirectorySearch(
                     pContext->hDirectory,
                     NULL,
@@ -137,7 +131,6 @@
 
 cleanup:
 
-    LW_SAFE_FREE_STRING(pszFilter);
     LW_SAFE_FREE_MEMORY(pwszFilter);
 
     if (pEntries)
@@ -173,7 +166,6 @@
         NULL
     };
     PCSTR pszTemplate = LOCAL_DB_DIR_ATTR_GID " = %u";
-    PSTR pszFilter = NULL;
     PWSTR pwszFilter = NULL;
     PDIRECTORY_ENTRY pEntry = NULL;
     DWORD dwNumEntries = 0;
@@ -183,17 +175,12 @@
         goto cleanup;
     }
 
-    dwError = LwAllocateStringPrintf(
-        &pszFilter,
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+        &pwszFilter,
         pszTemplate,
         pUserObject->userInfo.gid);
     BAIL_ON_LSA_ERROR(dwError);
 
-    dwError = LwMbsToWc16s(
-        pszFilter,
-        &pwszFilter);
-    BAIL_ON_LSA_ERROR(dwError);
-
     dwError = DirectorySearch(
         pContext->hDirectory,
         NULL,
@@ -218,8 +205,6 @@
     BAIL_ON_LSA_ERROR(dwError);
 
 cleanup:
-
-    LW_SAFE_FREE_STRING(pszFilter);
     LW_SAFE_FREE_MEMORY(pwszFilter);
 
     if (pEntry)
@@ -293,14 +278,13 @@
     PDIRECTORY_ENTRY pEntry = NULL;
     DWORD dwNumEntries = 0;
     PCSTR pszFilterTemplateQualified =
-        LOCAL_DB_DIR_ATTR_NETBIOS_NAME " = \"%s\"" \
-        " AND " LOCAL_DB_DIR_ATTR_SAM_ACCOUNT_NAME " = \"%s\"%s";
-    PCSTR pszFilterTemplateString = "%s = \"%s\"%s";
+        LOCAL_DB_DIR_ATTR_NETBIOS_NAME " = %Q" \
+        " AND " LOCAL_DB_DIR_ATTR_SAM_ACCOUNT_NAME " = %Q%s";
+    PCSTR pszFilterTemplateString = "%s = %Q%s";
     PCSTR pszFilterTemplateDword = "%s = %u%s";
     PCSTR pszFilterTemplateType = " AND " LOCAL_DB_DIR_ATTR_OBJECT_CLASS " = %u";
     PCSTR pszFilterBy = NULL;
     PSTR pszFilterType = NULL;
-    PSTR  pszFilter = NULL;
     PWSTR pwszFilter = NULL;
     DWORD dwObjectClass = LOCAL_OBJECT_CLASS_UNKNOWN;
     DWORD dwIndex = 0;
@@ -389,28 +373,30 @@
                 LOCAL_UNLOCK_MUTEX(bLocked, &gLPGlobals.cfgMutex);
             }
 
-            dwError = LwAllocateStringPrintf(
-                &pszFilter,
+            dwError = DirectoryAllocateWC16StringFilterPrintf(
+                &pwszFilter,
                 pszFilterTemplateQualified,
                 pLoginInfo->pszDomain,
                 pLoginInfo->pszName,
                 pszFilterType ? pszFilterType : "");
             BAIL_ON_LSA_ERROR(dwError);
             break;
+
         case LSA_QUERY_TYPE_BY_DN:
         case LSA_QUERY_TYPE_BY_SID:
         case LSA_QUERY_TYPE_BY_UPN:
-            dwError = LwAllocateStringPrintf(
-                &pszFilter,
+            dwError = DirectoryAllocateWC16StringFilterPrintf(
+                &pwszFilter,
                 pszFilterTemplateString,
                 pszFilterBy,
                 QueryList.ppszStrings[dwIndex],
                 pszFilterType ? pszFilterType : "");
             BAIL_ON_LSA_ERROR(dwError);
             break;
+
         case LSA_QUERY_TYPE_BY_UNIX_ID:
-            dwError = LwAllocateStringPrintf(
-                &pszFilter,
+            dwError = DirectoryAllocateWC16StringFilterPrintf(
+                &pwszFilter,
                 pszFilterTemplateDword,
                 pszFilterBy,
                 QueryList.pdwIds[dwIndex],
@@ -422,11 +408,6 @@
             BAIL_ON_LSA_ERROR(dwError);
         }
 
-        dwError = LwMbsToWc16s(
-            pszFilter,
-            &pwszFilter);
-        BAIL_ON_LSA_ERROR(dwError);
-
         dwError = DirectorySearch(
             pContext->hDirectory,
             NULL,
@@ -476,7 +457,6 @@
             BAIL_ON_LSA_ERROR(dwError);
         }
 
-        LW_SAFE_FREE_STRING(pszFilter);
         LW_SAFE_FREE_MEMORY(pwszFilter);
 
         if (pEntries)
@@ -495,7 +475,6 @@
 cleanup:
     LOCAL_UNLOCK_MUTEX(bLocked, &gLPGlobals.cfgMutex);
     LW_SAFE_FREE_STRING(pszFilterType);
-    LW_SAFE_FREE_STRING(pszFilter);
     LW_SAFE_FREE_MEMORY(pwszFilter);
 
     if (pEntries)
@@ -627,7 +606,6 @@
         NULL
     };
     PSTR pszTypeFilter = NULL;
-    PSTR pszFilter = NULL;
     PWSTR pwszFilter = NULL;
     DWORD dwObjectClass = LOCAL_OBJECT_CLASS_UNKNOWN;
     LOCAL_ENUM_HANDLE hEnum = NULL;
@@ -675,23 +653,20 @@
 
     if (pszDomainName)
     {
-        dwError = LwAllocateStringPrintf(
-            &pszFilter,
-            LOCAL_DB_DIR_ATTR_NETBIOS_NAME " = \"%s\" AND (%s)",
+        dwError = DirectoryAllocateWC16StringFilterPrintf(
+            &pwszFilter,
+            LOCAL_DB_DIR_ATTR_NETBIOS_NAME " = %Q AND (%s)",
             pszDomainName,
             pszTypeFilter);
         BAIL_ON_LSA_ERROR(dwError);
     }
     else
     {
-        pszFilter = pszTypeFilter;
-        pszTypeFilter = NULL;
-    }
-
     dwError = LwMbsToWc16s(
-        pszFilter,
+            pszTypeFilter,
         &pwszFilter);
     BAIL_ON_LSA_ERROR(dwError);
+    }
 
     dwError = DirectorySearch(
         pContext->hDirectory,
@@ -707,9 +682,7 @@
     *phEnum = hEnum;
 
 cleanup:
-
     LW_SAFE_FREE_STRING(pszTypeFilter);
-    LW_SAFE_FREE_STRING(pszFilter);
     LW_SAFE_FREE_MEMORY(pwszFilter);
 
     return dwError;
@@ -832,7 +805,6 @@
         NULL
     };
 
-    PSTR pszFilter = NULL;
     PWSTR pwszFilter = NULL;
     LOCAL_ENUM_HANDLE hEnum = NULL;
     PDIRECTORY_ENTRY pEntry = NULL;
@@ -845,17 +817,12 @@
     hEnum->hProvider = hProvider;
     hEnum->type = LOCAL_ENUM_HANDLE_MEMBERS;
 
-    dwError = LwAllocateStringPrintf(
-        &pszFilter,
-        LOCAL_DB_DIR_ATTR_OBJECT_SID " = \"%s\"",
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+        &pwszFilter,
+        LOCAL_DB_DIR_ATTR_OBJECT_SID " = %Q",
         pszSid);
     BAIL_ON_LSA_ERROR(dwError);
 
-    dwError = LwMbsToWc16s(
-        pszFilter,
-        &pwszFilter);
-    BAIL_ON_LSA_ERROR(dwError);
-
     dwError = DirectorySearch(
         pContext->hDirectory,
         NULL,
@@ -899,7 +866,6 @@
 
 cleanup:
 
-    LW_SAFE_FREE_STRING(pszFilter);
     LW_SAFE_FREE_MEMORY(pwszFilter);
     LW_SAFE_FREE_MEMORY(pwszDN);
 
@@ -1096,21 +1062,15 @@
     };
     PDIRECTORY_ENTRY pEntries = NULL;
     DWORD dwNumEntries = 0;
-    PSTR pszFilter = NULL;
     PWSTR pwszFilter = NULL;
     PWSTR pwszDN = NULL;
 
-    dwError = LwAllocateStringPrintf(
-        &pszFilter,
-        LOCAL_DB_DIR_ATTR_OBJECT_SID " = \"%s\"",
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+        &pwszFilter,
+        LOCAL_DB_DIR_ATTR_OBJECT_SID " = %Q",
         pszSid);
     BAIL_ON_LSA_ERROR(dwError);
 
-    dwError = LwMbsToWc16s(
-        pszFilter,
-            &pwszFilter);
-    BAIL_ON_LSA_ERROR(dwError);
-
     dwError = DirectorySearch(
         pContext->hDirectory,
         NULL,
@@ -1147,7 +1107,6 @@
 
     LW_SAFE_FREE_MEMORY(pwszDN);
     LW_SAFE_FREE_MEMORY(pwszFilter);
-    LW_SAFE_FREE_MEMORY(pszFilter);
 
     if (pEntries)
     {
}
diff -Nurb likewise-open.old/lsass/server/auth-providers/local-provider/lpuser.c likewise-open.new/lsass/server/auth-providers/local-provider/lpuser.c
--- likewise-open.old/lsass/server/auth-providers/local-provider/lpuser.c	2011-06-29 14:48:49.000000000 -0700
+++ likewise-open.new/lsass/server/auth-providers/local-provider/lpuser.c	2011-06-29 15:05:39.000000000 -0700
@@ -80,25 +80,19 @@
     PCSTR pszFilterTemplate =
                         LOCAL_DB_DIR_ATTR_UID " = %u" \
                         " AND " LOCAL_DB_DIR_ATTR_OBJECT_CLASS " = %u";
-    PSTR  pszFilter = NULL;
     PWSTR pwszFilter = NULL;
     PDIRECTORY_ENTRY pEntry = NULL;
     PDIRECTORY_ENTRY pEntries = NULL;
     DWORD dwNumEntries = 0;
     DWORD dwUserInfoFlags = 0;
 
-    dwError = LwAllocateStringPrintf(
-                    &pszFilter,
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                    &pwszFilter,
                     pszFilterTemplate,
                     uid,
                     LOCAL_OBJECT_CLASS_USER);
     BAIL_ON_LSA_ERROR(dwError);
 
-    dwError = LwMbsToWc16s(
-                    pszFilter,
-                    &pwszFilter);
-    BAIL_ON_LSA_ERROR(dwError);
-
     dwError = DirectorySearch(
                     pContext->hDirectory,
                     NULL,
@@ -143,7 +137,6 @@
     }
 
     LW_SAFE_FREE_MEMORY(pwszFilter);
-    LW_SAFE_FREE_STRING(pszFilter);
 
     return dwError;
 
@@ -166,6 +159,7 @@
     BOOLEAN bEventlogEnabled = FALSE;
     PLSA_LOGIN_NAME_INFO pLoginInfo = NULL;
     PWSTR pwszUserDN = NULL;
+    PSTR pszUserDn = NULL;
     enum AttrValueIndex {
         LOCAL_DAU0_IDX_GID = 0,
         LOCAL_DAU0_IDX_OBJECTCLASS,
@@ -339,9 +333,8 @@
     PWSTR pwszGroupDN = NULL;
     PWSTR pwszBase = NULL;
     ULONG ulScope = 0;
-    wchar_t wszFilterFmt[] = L"%ws = \'%ws\'";
+    PCSTR filterFormat = LOCAL_DB_DIR_ATTR_DISTINGUISHED_NAME " = %Q";
     PWSTR pwszFilter = NULL;
-    DWORD dwFilterLen = 0;
     PDIRECTORY_ENTRY pMember = NULL;
     DWORD dwNumEntries = 0;
     BOOLEAN bUserAdded = FALSE;
@@ -547,21 +540,16 @@
 
     bUserAdded = TRUE;
 
-    dwFilterLen = (sizeof(wszAttrDistinguishedName) - 2) +
-                  (wc16slen(pwszUserDN) * sizeof(WCHAR)) +
-                   sizeof(wszFilterFmt);
-
-    dwError = LwAllocateMemory(
-                    dwFilterLen,
-                    (PVOID*)&pwszFilter);
+    dwError = LwWc16sToMbs(
+                    pwszUserDN,
+                    &pszUserDn);
     BAIL_ON_LSA_ERROR(dwError);
 
-    if (sw16printfw(pwszFilter, dwFilterLen/sizeof(WCHAR), wszFilterFmt,
-                    wszAttrDistinguishedName, pwszUserDN) < 0)
-    {
-        dwError = LwErrnoToWin32Error(errno);
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                    &pwszFilter,
+                    filterFormat,
+                    pszUserDn);
         BAIL_ON_LSA_ERROR(dwError);
-    }
 
     dwError = DirectorySearch(
                     pContext->hDirectory,
@@ -701,6 +689,7 @@
         LsaSrvFreeNameInfo(pLoginInfo);
     }
 
+    LW_SAFE_FREE_MEMORY(pszUserDn);
     LW_SAFE_FREE_MEMORY(pwszUserDN);
     LW_SAFE_FREE_MEMORY(pwszGroupDN);
     LW_SAFE_FREE_MEMORY(pwszSamAccountName);
@@ -714,7 +703,6 @@
     LW_SAFE_FREE_MEMORY(pwszNetBIOSDomain);
     RTL_FREE(&pGroupSID);
     RTL_FREE(&pUserSID);
-
     LW_SAFE_FREE_MEMORY(pwszFilter);
 
     if (pMember)
@@ -1204,12 +1192,13 @@
     PWSTR  pwszUserDN
     )
 {
-    const wchar_t wszFilterTemplate[] = L"%ws=%u AND %ws='%ws'";
+    PCSTR filterTemplate = LOCAL_DB_DIR_ATTR_OBJECT_CLASS "=%u AND "
+                           LOCAL_DB_DIR_ATTR_DISTINGUISHED_NAME "=%Q";
     DWORD dwError = 0;
     PLOCAL_PROVIDER_CONTEXT pContext = (PLOCAL_PROVIDER_CONTEXT)hProvider;
-    WCHAR wszAttrNameDN[] = LOCAL_DIR_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrNameObjectClass[] = LOCAL_DIR_ATTR_OBJECT_CLASS;
     WCHAR wszAttrNameObjectSid[] = LOCAL_DIR_ATTR_OBJECT_SID;
+    PSTR pszUserDn = NULL;
     PWSTR pwszFilter = NULL;
     PDIRECTORY_ENTRY pEntry = NULL;
     DWORD dwNumEntries = 0;
@@ -1223,11 +1212,16 @@
         NULL
     };
 
-    dwError = LwAllocateWc16sPrintfW(
+    dwError = LwWc16sToMbs(
+                    pwszUserDN,
+                    &pszUserDn);
+    BAIL_ON_LSA_ERROR(dwError);
+
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
                     &pwszFilter,
-                    wszFilterTemplate,
-                    wszAttrNameObjectClass, LOCAL_OBJECT_CLASS_USER,
-                    wszAttrNameDN, pwszUserDN);
+                    filterTemplate,
+                    LOCAL_OBJECT_CLASS_USER,
+                    pszUserDn);
     BAIL_ON_LSA_ERROR(dwError);
 
     dwError = DirectorySearch(
@@ -1282,6 +1276,7 @@
         DirectoryFreeEntries(pEntry, dwNumEntries);
     }
 
+    LW_SAFE_FREE_MEMORY(pszUserDn);
     LW_SAFE_FREE_MEMORY(pwszFilter);
     LW_SAFE_FREE_MEMORY(pUserSid);
 
@@ -1299,7 +1294,7 @@
     PWSTR  pwszNewPassword
     )
 {
-    const wchar_t wszUserFilter[] = L"%ws = '%ws'";
+    PCSTR userFilter = LOCAL_DB_DIR_ATTR_DISTINGUISHED_NAME " = %Q";
     DWORD dwError = 0;
     NTSTATUS ntStatus = STATUS_SUCCESS;
     PLOCAL_PROVIDER_CONTEXT pContext = (PLOCAL_PROVIDER_CONTEXT)hProvider;
@@ -1307,14 +1302,11 @@
     PACCESS_TOKEN pUserToken = NULL;
     PWSTR pwszBase = NULL;
     DWORD dwScope = 0;
+    PSTR pszUserDn = NULL;
     PWSTR pwszFilter = NULL;
-    DWORD dwFilterLen = 0;
-    size_t sUserDnLen = 0;
-    WCHAR wszAttrDN[] = LOCAL_DIR_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrUid[] = LOCAL_DIR_ATTR_UID;
     WCHAR wszAttrGid[] = LOCAL_DIR_ATTR_GID;
     WCHAR wszAttrSecurityDescriptor[] = LOCAL_DIR_ATTR_SECURITY_DESCRIPTOR;
-
     PWSTR wszAttributes[] = {
         wszAttrUid,
         wszAttrGid,
@@ -1330,25 +1322,17 @@
     GENERIC_MAPPING GenericMapping = {0};
     DWORD dwAccessGranted = 0;
 
-    dwError = LwWc16sLen(pwszUserDN, &sUserDnLen);
+    dwError = LwWc16sToMbs(
+                      pwszUserDN,
+                      &pszUserDn);
     BAIL_ON_LSA_ERROR(dwError);
 
-    dwFilterLen = (sizeof(wszAttrDN)/sizeof(wszAttrDN[0]) +
-                   sUserDnLen +
-                   sizeof(wszUserFilter));
-
-    dwError = LwAllocateMemory(sizeof(pwszFilter[0]) * dwFilterLen,
-                               OUT_PPVOID(&pwszFilter));
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                    &pwszFilter,
+                    userFilter,
+                    pszUserDn);
     BAIL_ON_LSA_ERROR(dwError);
 
-    if (sw16printfw(pwszFilter, dwFilterLen,
-                    wszUserFilter,
-                    wszAttrDN, pwszUserDN) < 0)
-    {
-        dwError = LwErrnoToWin32Error(errno);
-        BAIL_ON_LSA_ERROR(dwError);
-    }
-
     dwError = DirectorySearch(
                     pContext->hDirectory,
                     pwszBase,
@@ -1379,7 +1363,7 @@
 
     dwError = DirectoryGetEntryAttrValueByName(
                     pUserEntry,
-                    wszAttrUid,
+                    wszAttrGid,
                     DIRECTORY_ATTR_TYPE_INTEGER,
                     &dwGid);
     BAIL_ON_LSA_ERROR(dwError);
@@ -1427,6 +1411,7 @@
         DirectoryFreeEntries(pUserEntry, dwNumEntries);
     }
 
+    LW_SAFE_FREE_MEMORY(pszUserDn);
     LW_SAFE_FREE_MEMORY(pwszFilter);
 
     DirectoryFreeEntrySecurityDescriptor(&pSecDesc);
@@ -1747,8 +1732,7 @@
     PLOCAL_PROVIDER_CONTEXT pContext = (PLOCAL_PROVIDER_CONTEXT)hProvider;
     WCHAR wszAttrNameLogonCount[] = LOCAL_DIR_ATTR_LOGON_COUNT;
     WCHAR wszAttrNameBadPasswordCount[] = LOCAL_DIR_ATTR_BAD_PASSWORD_COUNT;
-    PCSTR pszFilterTemplate =  LOCAL_DB_DIR_ATTR_DISTINGUISHED_NAME " = '%s'";
-    PSTR  pszFilter = NULL;
+    PCSTR pszFilterTemplate = LOCAL_DB_DIR_ATTR_DISTINGUISHED_NAME " = %Q";
     PWSTR pwszFilter = NULL;
     PDIRECTORY_ENTRY pEntry = NULL;
     PDIRECTORY_ENTRY pEntries = NULL;
@@ -1765,17 +1749,12 @@
     BAIL_ON_INVALID_POINTER(hProvider);
     BAIL_ON_INVALID_POINTER(pszUserDn);
 
-    dwError = LwAllocateStringPrintf(
-                    &pszFilter,
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                    &pwszFilter,
                     pszFilterTemplate,
                     pszUserDn);
     BAIL_ON_LSA_ERROR(dwError);
 
-    dwError = LwMbsToWc16s(
-                    pszFilter,
-                    &pwszFilter);
-    BAIL_ON_LSA_ERROR(dwError);
-
     dwError = DirectorySearch(
                     pContext->hDirectory,
                     NULL,
@@ -1828,7 +1807,6 @@
     }
 
     LW_SAFE_FREE_MEMORY(pwszFilter);
-    LW_SAFE_FREE_MEMORY(pszFilter);
 
     return dwError;
 
diff -Nurb likewise-open.old/lsass/server/include/directory.h likewise-open.new/lsass/server/include/directory.h
--- likewise-open.old/lsass/server/include/directory.h	2011-06-29 14:48:48.000000000 -0700
+++ likewise-open.new/lsass/server/include/directory.h	2011-06-29 15:05:39.000000000 -0700
@@ -492,6 +492,13 @@
     PSTR* ppszOutputString
     );
 
+DWORD
+DirectoryAllocateWC16StringFilterPrintf(
+    OUT PWSTR* pOutput,
+    IN PCSTR Format,
+    ...
+    );
+
 VOID
 DirectoryFreeStringW(
     PWSTR pwszString
diff -Nurb likewise-open.old/lsass/server/rpc/samr/samr_changepassworduser2.c likewise-open.new/lsass/server/rpc/samr/samr_changepassworduser2.c
--- likewise-open.old/lsass/server/rpc/samr/samr_changepassworduser2.c	2011-06-29 14:48:51.000000000 -0700
+++ likewise-open.new/lsass/server/rpc/samr/samr_changepassworduser2.c	2011-06-29 15:05:39.000000000 -0700
@@ -59,26 +59,24 @@
     /* [in] */ HashPassword    *pLmVerifier
     )
 {
-    const wchar_t wszFilterFmt[] = L"%ws='%ws'";
+    PCSTR filterFormat = "%s=%Q";
 
     NTSTATUS ntStatus = STATUS_SUCCESS;
     DWORD dwError = ERROR_SUCCESS;
     HANDLE hDirectory = NULL;
     PWSTR pwszBase = NULL;
     DWORD dwScope = 0;
-    DWORD dwFilterLen = 0;
     PWSTR pwszFilter = NULL;
     PDIRECTORY_ENTRY pEntries = NULL;
     DWORD dwNumEntries = 0;
+    CHAR szAttrSamAccountName[] = DS_ATTR_SAM_ACCOUNT_NAME;
     WCHAR wszAttrDn[] = DS_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrObjectClass[] = DS_ATTR_OBJECT_CLASS;
-    WCHAR wszAttrSamAccountName[] = DS_ATTR_SAM_ACCOUNT_NAME;
     WCHAR wszAttrSecurityDesc[] = DS_ATTR_SECURITY_DESCRIPTOR;
     WCHAR wszAttrAccountFlags[] = DS_ATTR_ACCOUNT_FLAGS;
     WCHAR wszAttrNtHash[] = DS_ATTR_NT_HASH;
-    size_t sUserNameLen = 0;
     PWSTR pwszUserName = NULL;
-    size_t sDomainNameLen = 0;
+    PSTR pszUserName = NULL;
     PWSTR pwszDomainName = NULL;
     WCHAR wszSystemName[] = { '\\', '\\', 0 };
     DWORD dwConnectFlags = SAMR_ACCESS_CONNECT_TO_SERVER;
@@ -132,24 +130,14 @@
                                    pAccountName);
     BAIL_ON_LSA_ERROR(dwError);
 
-    sDomainNameLen = pDomainName->Length / 2;
-    sUserNameLen   = pAccountName->Length / 2;
-
-    dwFilterLen = (((sizeof(wszAttrSamAccountName)
-                     /sizeof(wszAttrSamAccountName[0])) - 1) +
-                   sUserNameLen +
-                   (sizeof(wszFilterFmt)/sizeof(wszFilterFmt[0])));
-
-    dwError = LwAllocateMemory(dwFilterLen * sizeof(WCHAR),
-                               OUT_PPVOID(&pwszFilter));
+    dwError = LwWc16sToMbs(pwszUserName, &pszUserName);
     BAIL_ON_LSA_ERROR(dwError);
 
-    if (sw16printfw(pwszFilter, dwFilterLen, wszFilterFmt,
-                    wszAttrSamAccountName, pwszUserName) < 0)
-    {
-        ntStatus = LwErrnoToNtStatus(errno);
-        BAIL_ON_NTSTATUS_ERROR(ntStatus);
-    }
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                              &pwszFilter,
+                              filterFormat,
+                              szAttrSamAccountName, pszUserName);
+    BAIL_ON_LSA_ERROR(dwError);
 
     dwError = DirectorySearch(hDirectory,
                               pwszBase,
@@ -267,6 +255,7 @@
 
     LW_SAFE_FREE_MEMORY(pwszDomainName);
     LW_SAFE_FREE_MEMORY(pwszUserName);
+    LW_SAFE_FREE_MEMORY(pszUserName);
     LW_SAFE_FREE_MEMORY(pwszFilter);
 
     DirectoryFreeEntrySecurityDescriptor(&pSecDesc);
diff -Nurb likewise-open.old/lsass/server/rpc/samr/samr_lookupdomain.c likewise-open.new/lsass/server/rpc/samr/samr_lookupdomain.c
--- likewise-open.old/lsass/server/rpc/samr/samr_lookupdomain.c	2011-06-29 14:48:51.000000000 -0700
+++ likewise-open.new/lsass/server/rpc/samr/samr_lookupdomain.c	2011-06-29 15:05:39.000000000 -0700
@@ -56,22 +56,20 @@
     /* [out] */ SID **ppSid
     )
 {
-    CHAR szDnToken[] = "DC";
-    wchar_t wszFilter[] = L"%ws=%u AND %ws=\'%ws\'";
+    PCSTR filterFormat = "%s=%u AND %s=%Q";
     NTSTATUS ntStatus = STATUS_SUCCESS;
     DWORD dwError = 0;
     PCONNECT_CONTEXT pConnCtx = NULL;
     PWSTR pwszBase = NULL;
-    WCHAR wszAttrObjectClass[] = DS_ATTR_OBJECT_CLASS;
-    WCHAR wszAttrDomain[] = DS_ATTR_DOMAIN;
+    CHAR szAttrObjectClass[] = DS_ATTR_OBJECT_CLASS;
+    CHAR szAttrDomain[] = DS_ATTR_DOMAIN;
     WCHAR wszAttrObjectSID[] = DS_ATTR_OBJECT_SID;
     DWORD dwObjectClass = DS_OBJECT_CLASS_DOMAIN;
     WCHAR wszBuiltinDomainName[] = SAMR_BUILTIN_DOMAIN_NAME;
     PWSTR pwszDomainName = NULL;
-    DWORD dwBaseLen = 0;
+    PSTR pszDomainName = NULL;
     DWORD dwScope = 0;
     PWSTR pwszFilter = NULL;
-    DWORD dwFilterLen = 0;
     PWSTR wszAttributes[2];
     PDIRECTORY_ENTRY pEntries = NULL;
     DWORD dwCount = 0;
@@ -101,26 +99,15 @@
         dwObjectClass = DS_OBJECT_CLASS_BUILTIN_DOMAIN;
     }
 
-    dwBaseLen = domain_name->MaximumLength +
-                ((sizeof(szDnToken) + 2) * sizeof(WCHAR));
-
-    dwFilterLen = (sizeof(wszAttrObjectClass) - 1) +
-                  10 +
-                  (sizeof(wszAttrDomain) - 1) +
-                  domain_name->Length +
-                  sizeof(wszFilter);
-
-    ntStatus = SamrSrvAllocateMemory(OUT_PPVOID(&pwszFilter),
-                                     dwFilterLen);
-    BAIL_ON_NTSTATUS_ERROR(ntStatus);
+    dwError = LwWc16sToMbs(pwszDomainName, &pszDomainName);
+    BAIL_ON_LSA_ERROR(dwError);
 
-    if (sw16printfw(pwszFilter, dwFilterLen/sizeof(WCHAR), wszFilter,
-                    wszAttrObjectClass, dwObjectClass,
-                    wszAttrDomain, pwszDomainName) < 0)
-    {
-        ntStatus = LwErrnoToNtStatus(errno);
-        BAIL_ON_NT_STATUS(ntStatus);
-    }
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                            &pwszFilter,
+                            filterFormat,
+                            szAttrObjectClass, dwObjectClass,
+                            szAttrDomain, pszDomainName);
+    BAIL_ON_LSA_ERROR(dwError);
 
     wszAttributes[0] = wszAttrObjectSID;
     wszAttributes[1] = NULL;
@@ -174,14 +161,13 @@
         SamrSrvFreeMemory(pwszDomainName);
     }
 
-    if (pwszFilter) {
-        SamrSrvFreeMemory(pwszFilter);
-    }
-
     if (pEntries) {
         DirectoryFreeEntries(pEntries, dwCount);
     }
 
+    LW_SAFE_FREE_MEMORY(pszDomainName);
+    LW_SAFE_FREE_MEMORY(pwszFilter);
+
     if (ntStatus == STATUS_SUCCESS &&
         dwError != ERROR_SUCCESS)
     {
diff -Nurb likewise-open.old/lsass/server/rpc/samr/samr_lookupnames.c likewise-open.new/lsass/server/rpc/samr/samr_lookupnames.c
--- likewise-open.old/lsass/server/rpc/samr/samr_lookupnames.c	2011-06-29 14:48:51.000000000 -0700
+++ likewise-open.new/lsass/server/rpc/samr/samr_lookupnames.c	2011-06-29 15:05:39.000000000 -0700
@@ -57,8 +57,8 @@
     OUT IDS            *pOutTypes
     )
 {
-    const wchar_t wszFilterFmt[] = L"(%ws=%u AND %ws='%ws' AND %ws='%ws') OR "
-                                   L"(%ws=%u AND %ws='%ws' AND %ws='%ws')";
+    PCSTR filterFormat = "(%s=%u AND %s=%Q AND %s=%Q) OR "
+                         "(%s=%u AND %s=%Q AND %s=%Q)";
     NTSTATUS ntStatus = STATUS_SUCCESS;
     DWORD dwError = 0;
     PDOMAIN_CONTEXT pDomCtx = NULL;
@@ -67,18 +67,20 @@
     IDS *pTypes = NULL;
     PWSTR pwszDn = NULL;
     PWSTR pwszDomainName = NULL;
+    PSTR pszDomainName = NULL;
     WCHAR wszAttrObjectClass[] = DS_ATTR_OBJECT_CLASS;
-    WCHAR wszAttrSamAccountName[] = DS_ATTR_SAM_ACCOUNT_NAME;
     WCHAR wszAttrObjectSid[] = DS_ATTR_OBJECT_SID;
-    WCHAR wszAttrDomainName[] = DS_ATTR_DOMAIN;
+    CHAR szAttrObjectClass[] = DS_ATTR_OBJECT_CLASS;
+    CHAR szAttrSamAccountName[] = DS_ATTR_SAM_ACCOUNT_NAME;
+    CHAR szAttrDomainName[] = DS_ATTR_DOMAIN;
     DWORD dwObjectClassUser = DS_OBJECT_CLASS_USER;
     DWORD dwObjectClassGroup = DS_OBJECT_CLASS_LOCAL_GROUP;
     DWORD dwScope = 0;
     PWSTR pwszFilter = NULL;
-    DWORD dwFilterLen = 0;
     PWSTR wszAttributes[3];
     DWORD i = 0;
     PWSTR pwszName = NULL;
+    PSTR pszName = NULL;
     PDIRECTORY_ENTRY pEntries = NULL;
     PDIRECTORY_ENTRY pEntry = NULL;
     PDIRECTORY_ATTRIBUTE pAttr = NULL;
@@ -103,6 +105,10 @@
     pwszDn         = pDomCtx->pwszDn;
     pwszDomainName = pDomCtx->pwszDomainName;
 
+    dwError = LwWc16sToMbs(pwszDomainName,
+                           &pszDomainName);
+    BAIL_ON_LSA_ERROR(dwError);
+
     ntStatus = SamrSrvAllocateMemory((void**)&pIds,
                                      sizeof(*pIds));
     BAIL_ON_NTSTATUS_ERROR(ntStatus);
@@ -129,35 +135,20 @@
                                                name);
         BAIL_ON_NTSTATUS_ERROR(ntStatus);
 
-        dwFilterLen = ((sizeof(wszAttrObjectClass) / sizeof(WCHAR)) - 1) +
-                      10 +
-                      ((sizeof(wszAttrSamAccountName) / sizeof(WCHAR)) - 1) +
-                      wc16slen(pwszName) +
-                      ((sizeof(wszAttrDomainName) / sizeof(WCHAR)) - 1) +
-                      wc16slen(pwszDomainName) +
-                      ((sizeof(wszAttrObjectClass) / sizeof(WCHAR)) - 1) +
-                      10 +
-                      ((sizeof(wszAttrSamAccountName) / sizeof(WCHAR)) - 1) +
-                      wc16slen(pwszName) +
-                      ((sizeof(wszAttrDomainName) / sizeof(WCHAR)) - 1) +
-                      wc16slen(pwszDomainName) +
-                      (sizeof(wszFilterFmt) / sizeof(wszFilterFmt[0]));
-
-        ntStatus = SamrSrvAllocateMemory((void**)&pwszFilter,
-                                         dwFilterLen * sizeof(WCHAR));
-        BAIL_ON_NTSTATUS_ERROR(ntStatus);
+        dwError = LwWc16sToMbs(pwszName,
+                               &pszName);
+        BAIL_ON_LSA_ERROR(dwError);
 
-        if (sw16printfw(pwszFilter, dwFilterLen, wszFilterFmt,
-                        wszAttrObjectClass, dwObjectClassUser,
-                        wszAttrSamAccountName, pwszName,
-                        wszAttrDomainName, pwszDomainName,
-                        wszAttrObjectClass, dwObjectClassGroup,
-                        wszAttrSamAccountName, pwszName,
-                        wszAttrDomainName, pwszDomainName) < 0)
-        {
-            ntStatus = LwErrnoToNtStatus(errno);
-            BAIL_ON_NTSTATUS_ERROR(ntStatus);
-        }
+        dwError = DirectoryAllocateWC16StringFilterPrintf(
+                                &pwszFilter,
+                                filterFormat,
+                                szAttrObjectClass, dwObjectClassUser,
+                                szAttrSamAccountName, pszName,
+                                szAttrDomainName, pszDomainName,
+                                szAttrObjectClass, dwObjectClassGroup,
+                                szAttrSamAccountName, pszName,
+                                szAttrDomainName, pszDomainName);
+        BAIL_ON_LSA_ERROR(dwError);
 
         wszAttributes[0] = wszAttrObjectSid;
         wszAttributes[1] = wszAttrObjectClass;
@@ -246,12 +237,6 @@
             pEntries = NULL;
         }
 
-        if (pwszFilter)
-        {
-            SamrSrvFreeMemory(pwszFilter);
-            pwszFilter = NULL;
-        }
-
         if (pwszName)
         {
             SamrSrvFreeMemory(pwszName);
@@ -262,6 +247,9 @@
         {
             RTL_FREE(&pSid);
         }
+
+        LW_SAFE_FREE_MEMORY(pszName);
+        LW_SAFE_FREE_MEMORY(pwszFilter);
     }
 
     pOutIds->dwCount    = pIds->dwCount;
@@ -300,11 +288,6 @@
         RTL_FREE(&pSid);
     }
 
-    if (pwszFilter)
-    {
-        SamrSrvFreeMemory(pwszFilter);
-    }
-
     if (pEntries)
     {
         DirectoryFreeEntries(pEntries, dwEntriesNum);
@@ -320,6 +303,10 @@
         SamrSrvFreeMemory(pTypes);
     }
 
+    LW_SAFE_FREE_MEMORY(pszName);
+    LW_SAFE_FREE_MEMORY(pszDomainName);
+    LW_SAFE_FREE_MEMORY(pwszFilter);
+
     if (ntStatus == STATUS_SUCCESS &&
         dwError != ERROR_SUCCESS)
     {
diff -Nurb likewise-open.old/lsass/server/rpc/samr/samr_queryaliasinfo.c likewise-open.new/lsass/server/rpc/samr/samr_queryaliasinfo.c
--- likewise-open.old/lsass/server/rpc/samr/samr_queryaliasinfo.c	2011-06-29 14:48:51.000000000 -0700
+++ likewise-open.new/lsass/server/rpc/samr/samr_queryaliasinfo.c	2011-06-29 15:05:39.000000000 -0700
@@ -80,7 +80,7 @@
     /* [out] */ AliasInfo **info
     )
 {
-    wchar_t wszFilterFmt[] = L"%ws='%ws'";
+    PCSTR filterFormat = "%s=%Q";
     NTSTATUS ntStatus = STATUS_SUCCESS;
     DWORD dwError = 0;
     PACCOUNT_CONTEXT pAcctCtx = NULL;
@@ -90,9 +90,10 @@
     WCHAR wszAttrDn[] = DS_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrSamAccountName[] = DS_ATTR_SAM_ACCOUNT_NAME;
     WCHAR wszAttrDescription[] = DS_ATTR_DESCRIPTION;
+    CHAR szAttrDn[] = DS_ATTR_DISTINGUISHED_NAME;
     DWORD dwScope = 0;
+    PSTR pszDn = NULL;
     PWSTR pwszFilter = NULL;
-    DWORD dwFilterLen = 0;
     PDIRECTORY_ENTRY pEntry = NULL;
     DWORD dwEntriesNum = 0;
     PDIRECTORY_ENTRY pMemberEntry = NULL;
@@ -145,20 +146,15 @@
 
     pwszBase = pDomCtx->pwszDn;
 
-    dwFilterLen = ((sizeof(wszAttrDn)/sizeof(WCHAR)) - 1) +
-                  wc16slen(pAcctCtx->pwszDn) +
-                  (sizeof(wszFilterFmt)/sizeof(wszFilterFmt[0]));
-
-    ntStatus = SamrSrvAllocateMemory((void**)&pwszFilter,
-                                   dwFilterLen * sizeof(WCHAR));
-    BAIL_ON_NTSTATUS_ERROR(ntStatus);
+    dwError = LwWc16sToMbs(pAcctCtx->pwszDn,
+                           &pszDn);
+    BAIL_ON_LSA_ERROR(dwError);
 
-    if (sw16printfw(pwszFilter, dwFilterLen, wszFilterFmt,
-                    wszAttrDn, pAcctCtx->pwszDn) < 0)
-    {
-        ntStatus = LwErrnoToNtStatus(errno);
-        BAIL_ON_NTSTATUS_ERROR(ntStatus);
-    }
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                            &pwszFilter,
+                            filterFormat,
+                            szAttrDn, pszDn);
+    BAIL_ON_LSA_ERROR(dwError);
 
     dwError = DirectorySearch(pConnCtx->hDirectory,
                               pwszBase,
@@ -219,10 +215,8 @@
     *info = pAliasInfo;
 
 cleanup:
-    if (pwszFilter)
-    {
-        SamrSrvFreeMemory(pwszFilter);
-    }
+    LW_SAFE_FREE_MEMORY(pszDn);
+    LW_SAFE_FREE_MEMORY(pwszFilter);
 
     if (pEntry)
     {
diff -Nurb likewise-open.old/lsass/server/rpc/samr/samr_querysecurity.c likewise-open.new/lsass/server/rpc/samr/samr_querysecurity.c
--- likewise-open.old/lsass/server/rpc/samr/samr_querysecurity.c	2011-06-29 14:48:51.000000000 -0700
+++ likewise-open.new/lsass/server/rpc/samr/samr_querysecurity.c	2011-06-29 15:05:39.000000000 -0700
@@ -55,8 +55,7 @@
     OUT PSAMR_SECURITY_DESCRIPTOR_BUFFER *ppSecDescBuf
     )
 {
-    const wchar_t wszFilterFmt[] = L"%ws='%ws'";
-
+    PCSTR filterFormat = "%s=%Q";
     NTSTATUS ntStatus = STATUS_SUCCESS;
     DWORD dwError = ERROR_SUCCESS;
     PSAMR_GENERIC_CONTEXT pCtx = (PSAMR_GENERIC_CONTEXT)hObject;
@@ -66,10 +65,9 @@
     HANDLE hDirectory = NULL;
     PWSTR pwszBaseDn = NULL;
     DWORD dwScope = 0;
-    WCHAR wszAttrDn[] = DS_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrSecDesc[] = DS_ATTR_SECURITY_DESCRIPTOR;
-    size_t sDnLen = 0;
-    DWORD dwFilterLen = 0;
+    CHAR szAttrDn[] = DS_ATTR_DISTINGUISHED_NAME;
+    PSTR pszDn = NULL;
     PWSTR pwszFilter = NULL;
     PDIRECTORY_ENTRY pEntries = NULL;
     DWORD dwNumEntries = 0;
@@ -114,25 +112,15 @@
         BAIL_ON_NTSTATUS_ERROR(ntStatus);
     }
 
-    dwError = LwWc16sLen(pwszDn, &sDnLen);
+    dwError = LwWc16sToMbs(pwszDn, &pszDn);
     BAIL_ON_LSA_ERROR(dwError);
 
-    dwFilterLen = ((sizeof(wszAttrDn)/sizeof(wszAttrDn[0])) - 1) +
-                  sDnLen +
-                  (sizeof(wszFilterFmt)/sizeof(wszFilterFmt[0]));
-
-    dwError = LwAllocateMemory(sizeof(WCHAR) * dwFilterLen,
-                               OUT_PPVOID(&pwszFilter));
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                              &pwszFilter,
+                              filterFormat,
+                              szAttrDn, pszDn);
     BAIL_ON_LSA_ERROR(dwError);
 
-    if (sw16printfw(pwszFilter, dwFilterLen, wszFilterFmt,
-                    wszAttrDn,
-                    pwszDn) < 0)
-    {
-        ntStatus = LwErrnoToNtStatus(errno);
-        BAIL_ON_NTSTATUS_ERROR(ntStatus);
-    }
-
     dwError = DirectorySearch(hDirectory,
                               pwszBaseDn,
                               dwScope,
@@ -176,6 +164,7 @@
         DirectoryFreeEntries(pEntries, dwNumEntries);
     }
 
+    LW_SAFE_FREE_MEMORY(pszDn);
     LW_SAFE_FREE_MEMORY(pwszFilter);
 
     if (ntStatus == STATUS_SUCCESS &&
diff -Nurb likewise-open.old/lsass/server/rpc/samr/samr_queryuserinfo.c likewise-open.new/lsass/server/rpc/samr/samr_queryuserinfo.c
--- likewise-open.old/lsass/server/rpc/samr/samr_queryuserinfo.c	2011-06-29 14:48:51.000000000 -0700
+++ likewise-open.new/lsass/server/rpc/samr/samr_queryuserinfo.c	2011-06-29 15:05:39.000000000 -0700
@@ -329,14 +329,13 @@
     /* [out] */ UserInfo **info
     )
 {
-    wchar_t wszFilterFmt[] = L"%ws='%ws'";
+    PCSTR filterFormat = "%s=%Q";
     NTSTATUS ntStatus = STATUS_SUCCESS;
     DWORD dwError = 0;
     PACCOUNT_CONTEXT pAcctCtx = NULL;
     PDOMAIN_CONTEXT pDomCtx = NULL;
     PCONNECT_CONTEXT pConnCtx = NULL;
     PWSTR pwszBase = NULL;
-    WCHAR wszAttrDn[] = DS_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrObjectSid[] = DS_ATTR_OBJECT_SID;
     WCHAR wszAttrSamAccountName[] = DS_ATTR_SAM_ACCOUNT_NAME;
     WCHAR wszAttrFullName[] = DS_ATTR_FULL_NAME;
@@ -363,9 +362,10 @@
     WCHAR wszAttrAccountExpiry[] = DS_ATTR_ACCOUNT_EXPIRY;
     WCHAR wszAttrLmHash[] = DS_ATTR_LM_HASH;
     WCHAR wszAttrNtHash[] = DS_ATTR_NT_HASH;
+    CHAR szAttrDn[] = DS_ATTR_DISTINGUISHED_NAME;
     DWORD dwScope = 0;
+    PSTR pszDn = NULL;
     PWSTR pwszFilter = NULL;
-    DWORD dwFilterLen = 0;
     PDIRECTORY_ENTRY pEntry = NULL;
     DWORD dwEntriesNum = 0;
     UserInfo *pUserInfo = NULL;
@@ -577,16 +577,15 @@
 
     pwszBase = pDomCtx->pwszDn;
 
-    dwFilterLen = ((sizeof(wszAttrDn)/sizeof(WCHAR)) - 1) +
-                  wc16slen(pAcctCtx->pwszDn) +
-                  (sizeof(wszFilterFmt)/sizeof(wszFilterFmt[0]));
-
-    ntStatus = SamrSrvAllocateMemory((void**)&pwszFilter,
-                                   dwFilterLen * sizeof(WCHAR));
-    BAIL_ON_NTSTATUS_ERROR(ntStatus);
+    dwError = LwWc16sToMbs(pAcctCtx->pwszDn,
+                           &pszDn);
+    BAIL_ON_LSA_ERROR(dwError);
 
-    sw16printfw(pwszFilter, dwFilterLen, wszFilterFmt,
-                wszAttrDn, pAcctCtx->pwszDn);
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                              &pwszFilter,
+                              filterFormat,
+                              szAttrDn, pszDn);
+    BAIL_ON_LSA_ERROR(dwError);
 
     dwError = DirectorySearch(pConnCtx->hDirectory,
                               pwszBase,
@@ -748,9 +747,8 @@
     *info = pUserInfo;
 
 cleanup:
-    if (pwszFilter) {
-        SamrSrvFreeMemory(pwszFilter);
-    }
+    LW_SAFE_FREE_MEMORY(pszDn);
+    LW_SAFE_FREE_MEMORY(pwszFilter);
 
     if (pEntry) {
         DirectoryFreeEntries(pEntry, dwEntriesNum);
diff -Nurb likewise-open.old/lsass/server/rpc/samr/samr_setsecurity.c likewise-open.new/lsass/server/rpc/samr/samr_setsecurity.c
--- likewise-open.old/lsass/server/rpc/samr/samr_setsecurity.c	2011-06-29 14:48:51.000000000 -0700
+++ likewise-open.new/lsass/server/rpc/samr/samr_setsecurity.c	2011-06-29 15:05:39.000000000 -0700
@@ -55,8 +55,7 @@
     IN  PSAMR_SECURITY_DESCRIPTOR_BUFFER  pSecDescBuf
     )
 {
-    const wchar_t wszFilterFmt[] = L"%ws='%ws'";
-
+    PCSTR filterFormat = "%s=%Q";
     NTSTATUS ntStatus = STATUS_SUCCESS;
     DWORD dwError = ERROR_SUCCESS;
     PSAMR_GENERIC_CONTEXT pCtx = (PSAMR_GENERIC_CONTEXT)hObject;
@@ -66,10 +65,9 @@
     HANDLE hDirectory = NULL;
     PWSTR pwszBaseDn = NULL;
     DWORD dwScope = 0;
-    WCHAR wszAttrDn[] = DS_ATTR_DISTINGUISHED_NAME;
+    CHAR szAttrDn[] = DS_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrSecDesc[] = DS_ATTR_SECURITY_DESCRIPTOR;
-    size_t sDnLen = 0;
-    DWORD dwFilterLen = 0;
+    PSTR pszDn = NULL;
     PWSTR pwszFilter = NULL;
     PDIRECTORY_ENTRY pEntries = NULL;
     DWORD dwNumEntries = 0;
@@ -148,25 +146,15 @@
         BAIL_ON_NTSTATUS_ERROR(ntStatus);
     }
 
-    dwError = LwWc16sLen(pwszDn, &sDnLen);
+    dwError = LwWc16sToMbs(pwszDn, &pszDn);
     BAIL_ON_LSA_ERROR(dwError);
 
-    dwFilterLen = ((sizeof(wszAttrDn)/sizeof(wszAttrDn[0])) - 1) +
-                  sDnLen +
-                  (sizeof(wszFilterFmt)/sizeof(wszFilterFmt[0]));
-
-    dwError = LwAllocateMemory(sizeof(WCHAR) * dwFilterLen,
-                               OUT_PPVOID(&pwszFilter));
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                              &pwszFilter,
+                              filterFormat,
+                              szAttrDn, pszDn);
     BAIL_ON_LSA_ERROR(dwError);
 
-    if (sw16printfw(pwszFilter, dwFilterLen, wszFilterFmt,
-                    wszAttrDn,
-                    pwszDn) < 0)
-    {
-        ntStatus = LwErrnoToNtStatus(errno);
-        BAIL_ON_NTSTATUS_ERROR(ntStatus);
-    }
-
     dwError = DirectorySearch(hDirectory,
                               pwszBaseDn,
                               dwScope,
@@ -243,6 +231,7 @@
         DirectoryFreeEntries(pEntries, dwNumEntries);
     }
 
+    LW_SAFE_FREE_MEMORY(pszDn);
     LW_SAFE_FREE_MEMORY(pwszFilter);
     LW_SAFE_FREE_MEMORY(pNewSecDesc);
 
diff -Nurb likewise-open.old/lsass/server/rpc/samr/samr_setuserinfo.c likewise-open.new/lsass/server/rpc/samr/samr_setuserinfo.c
--- likewise-open.old/lsass/server/rpc/samr/samr_setuserinfo.c	2011-06-29 14:48:51.000000000 -0700
+++ likewise-open.new/lsass/server/rpc/samr/samr_setuserinfo.c	2011-06-29 15:05:39.000000000 -0700
@@ -825,18 +825,17 @@
     IN  PWSTR            pwszPassword
     )
 {
-    wchar_t wszFilterFmt[] = L"%ws='%ws'";
+    PCSTR filterFormat = "%s=%Q";
     NTSTATUS ntStatus = STATUS_SUCCESS;
     DWORD dwError = ERROR_SUCCESS;
     PDOMAIN_CONTEXT pDomCtx = NULL;
     PCONNECT_CONTEXT pConnCtx = NULL;
-    WCHAR wszAttrDn[] = DS_ATTR_DISTINGUISHED_NAME;
+    CHAR szAttrDn[] = DS_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrPasswordLastSet[] = DS_ATTR_PASSWORD_LAST_SET;
     PWSTR pwszBase = 0;
     DWORD dwScope = 0;
-    size_t sDnLen = 0;
-    DWORD dwFilterLen = 0;
     PWSTR pwszFilter = NULL;
+    PSTR pszDn = NULL;
     PDIRECTORY_ENTRY pEntry = NULL;
     DWORD dwNumEntries = 0;
     LONG64 llLastPasswordChange = 0;
@@ -852,24 +851,16 @@
     pConnCtx = pDomCtx->pConnCtx;
     pwszBase = pDomCtx->pwszDn;
 
-    dwError = LwWc16sLen(pAcctCtx->pwszDn, &sDnLen);
+    dwError = LwWc16sToMbs(pAcctCtx->pwszDn,
+                           &pszDn);
     BAIL_ON_LSA_ERROR(dwError);
 
-    dwFilterLen = ((sizeof(wszAttrDn)/sizeof(WCHAR)) - 1) +
-                  sDnLen +
-                  (sizeof(wszFilterFmt)/sizeof(wszFilterFmt[0]));
-
-    dwError = LwAllocateMemory(sizeof(WCHAR) * dwFilterLen,
-                               OUT_PPVOID(&pwszFilter));
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                              &pwszFilter,
+                              filterFormat,
+                              szAttrDn, pszDn);
     BAIL_ON_LSA_ERROR(dwError);
 
-    if (sw16printfw(pwszFilter, dwFilterLen, wszFilterFmt,
-                    wszAttrDn, pAcctCtx->pwszDn) < 0)
-    {
-        ntStatus = LwErrnoToNtStatus(errno);
-        BAIL_ON_NTSTATUS_ERROR(ntStatus);
-    }
-
     dwError = DirectorySearch(pConnCtx->hDirectory,
                               pwszBase,
                               dwScope,
@@ -929,6 +920,7 @@
         DirectoryFreeEntries(pEntry, dwNumEntries);
     }
 
+    LW_SAFE_FREE_MEMORY(pszDn);
     LW_SAFE_FREE_MEMORY(pwszFilter);
 
     if (ntStatus == STATUS_SUCCESS &&
diff -Nurb likewise-open.old/lsass/server/store/dsapi/diradd.c likewise-open.new/lsass/server/store/dsapi/diradd.c
--- likewise-open.old/lsass/server/store/dsapi/diradd.c	2011-06-29 14:48:48.000000000 -0700
+++ likewise-open.new/lsass/server/store/dsapi/diradd.c	2011-06-29 15:05:39.000000000 -0700
@@ -59,10 +59,10 @@
     PDIRECTORY_CONTEXT pContext = (PDIRECTORY_CONTEXT)hDirectory;
     PWSTR pwszBase = NULL;
     DWORD dwScope = 0;
-    wchar_t wszFilterFmt[] = L"%ws='%ws'";
-    size_t sDnLen = 0;
-    DWORD dwFilterLen = 0;
+    PSTR pszObjectDn = NULL;
+    PCSTR filterFormat = "%s=%Q";
     PWSTR pwszFilter = NULL;
+    CHAR szAttrDn[] = DIRECTORY_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrDn[] = DIRECTORY_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrObjectClass[] = DIRECTORY_ATTR_OBJECT_CLASS;
     PDIRECTORY_ENTRY pEntries = NULL;
@@ -82,24 +82,14 @@
         BAIL_ON_DIRECTORY_ERROR(dwError);
     }
 
-    dwError = LwWc16sLen(pwszObjectDN, &sDnLen);
+    dwError = LwWc16sToMbs(pwszObjectDN, &pszObjectDn);
     BAIL_ON_DIRECTORY_ERROR(dwError);
 
-    dwFilterLen = ((sizeof(wszFilterFmt)/sizeof(wszFilterFmt[0])) - 1) +
-                   sizeof(wszAttrDn) +
-                   (sizeof(WCHAR) * sDnLen);
-
-    dwError = DirectoryAllocateMemory(dwFilterLen,
-                                      OUT_PPVOID(&pwszFilter));
-    BAIL_ON_DIRECTORY_ERROR(dwError);
-
-    if (sw16printfw(pwszFilter, dwFilterLen, wszFilterFmt,
-                    wszAttrDn,
-                    pwszObjectDN) < 0)
-    {
-        dwError = LwErrnoToWin32Error(errno);
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                              &pwszFilter,
+                              filterFormat,
+                              szAttrDn, pszObjectDn);
         BAIL_ON_DIRECTORY_ERROR(dwError);
-    }
 
     dwError = DirectorySearch(hDirectory,
                               pwszBase,
@@ -155,6 +145,7 @@
         DirectoryFreeEntries(pEntries, dwNumEntries);
     }
 
+    DIRECTORY_FREE_MEMORY(pszObjectDn);
     DIRECTORY_FREE_MEMORY(pwszFilter);
 
     return dwError;
diff -Nurb likewise-open.old/lsass/server/store/dsapi/dirattr.c likewise-open.new/lsass/server/store/dsapi/dirattr.c
--- likewise-open.old/lsass/server/store/dsapi/dirattr.c	2011-06-29 14:48:48.000000000 -0700
+++ likewise-open.new/lsass/server/store/dsapi/dirattr.c	2011-06-29 15:05:39.000000000 -0700
@@ -561,15 +561,15 @@
     PSECURITY_DESCRIPTOR_ABSOLUTE  pSecDesc
     )
 {
-    const wchar_t wszFilterFmt[] = L"%ws='%ws'";
+    PCSTR filterFormat = "%s=%Q";
     DWORD dwError = ERROR_SUCCESS;
     NTSTATUS ntStatus = STATUS_SUCCESS;
     WCHAR wszAttrDn[] = DIRECTORY_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrSecurityDescriptor[] = DIRECTORY_ATTR_SECURITY_DESCRIPTOR;
+    CHAR szAttrDn[] = DIRECTORY_ATTR_DISTINGUISHED_NAME;
     PWSTR pwszBase = NULL;
     DWORD dwScope = 0;
-    size_t sDnLen = 0;
-    DWORD dwFilterLen = 0;
+    PSTR pszDn = NULL;
     PWSTR pwszFilter = NULL;
     PDIRECTORY_ENTRY pEntry = NULL;
     DWORD dwNumEntries = 0;
@@ -613,25 +613,15 @@
         BAIL_ON_DIRECTORY_ERROR(dwError);
     }
 
-    dwError = LwWc16sLen(pwszDn, &sDnLen);
+    dwError = LwWc16sToMbs(pwszDn, &pszDn);
     BAIL_ON_DIRECTORY_ERROR(dwError);
 
-    dwFilterLen = ((sizeof(wszAttrDn) / sizeof(WCHAR)) - 1) +
-                  sDnLen +
-                  (sizeof(wszFilterFmt) / sizeof(wszFilterFmt[0]));
-
-    dwError = LwAllocateMemory(dwFilterLen * sizeof(pwszFilter[0]),
-                               OUT_PPVOID(&pwszFilter));
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                           &pwszFilter,
+                           filterFormat,
+                           szAttrDn, pszDn);
     BAIL_ON_DIRECTORY_ERROR(dwError);
 
-    if (sw16printfw(pwszFilter, dwFilterLen, wszFilterFmt,
-                    wszAttrDn,
-                    pwszDn) < 0)
-    {
-        ntStatus = LwErrnoToNtStatus(errno);
-        BAIL_ON_NTSTATUS_ERROR(ntStatus);
-    }
-
     dwError = DirectorySearch(hDirectory,
                               pwszBase,
                               dwScope,
@@ -691,6 +681,7 @@
     BAIL_ON_DIRECTORY_ERROR(dwError);
 
 cleanup:
+    DIRECTORY_FREE_MEMORY(pszDn);
     LW_SAFE_FREE_MEMORY(pwszFilter);
     LW_SAFE_FREE_MEMORY(pSecDescRel);
 
diff -Nurb likewise-open.old/lsass/server/store/dsapi/dirdel.c likewise-open.new/lsass/server/store/dsapi/dirdel.c
--- likewise-open.old/lsass/server/store/dsapi/dirdel.c	2011-06-29 14:48:48.000000000 -0700
+++ likewise-open.new/lsass/server/store/dsapi/dirdel.c	2011-06-29 15:05:39.000000000 -0700
@@ -60,10 +60,10 @@
     PDIRECTORY_PROVIDER pProvider = (pContext ? pContext->pProvider : NULL);
     PWSTR pwszBase = NULL;
     DWORD dwScope = 0;
-    wchar_t wszFilterFmt[] = L"%ws='%ws'";
-    size_t sDnLen = 0;
-    DWORD dwFilterLen = 0;
+    PSTR pszObjectDn = NULL;
+    PCSTR filterFormat = "%s=%Q";
     PWSTR pwszFilter = NULL;
+    CHAR szAttrDn[] = DIRECTORY_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrDn[] = DIRECTORY_ATTR_DISTINGUISHED_NAME;
     WCHAR wszAttrObjectClass[] = DIRECTORY_ATTR_OBJECT_CLASS;
     WCHAR wszAttrGid[] = DIRECTORY_ATTR_GID;
@@ -113,24 +113,14 @@
         BAIL_ON_DIRECTORY_ERROR(dwError);
     }
 
-    dwError = LwWc16sLen(pwszObjectDN, &sDnLen);
+    dwError = LwWc16sToMbs(pwszObjectDN, &pszObjectDn);
     BAIL_ON_DIRECTORY_ERROR(dwError);
 
-    dwFilterLen = ((sizeof(wszFilterFmt)/sizeof(wszFilterFmt[0])) - 1) +
-                   sizeof(wszAttrDn) +
-                   (sizeof(WCHAR) * sDnLen);
-
-    dwError = DirectoryAllocateMemory(dwFilterLen,
-                                      OUT_PPVOID(&pwszFilter));
-    BAIL_ON_DIRECTORY_ERROR(dwError);
-
-    if (sw16printfw(pwszFilter, dwFilterLen, wszFilterFmt,
-                    wszAttrDn,
-                    pwszObjectDN) < 0)
-    {
-        dwError = LwErrnoToWin32Error(errno);
+    dwError = DirectoryAllocateWC16StringFilterPrintf(
+                              &pwszFilter,
+                              filterFormat,
+                              szAttrDn, pszObjectDn);
         BAIL_ON_DIRECTORY_ERROR(dwError);
-    }
 
     dwError = DirectorySearch(hDirectory,
                               pwszBase,
@@ -331,6 +321,7 @@
         DirectoryFreeEntries(pDelMemEntries, dwDelEntriesNum);
     }
 
+    DIRECTORY_FREE_MEMORY(pszObjectDn);
     DIRECTORY_FREE_MEMORY(pwszFilter);
 
     return dwError;
diff -Nurb likewise-open.old/lsass/server/store/dsapi/dirmem.c likewise-open.new/lsass/server/store/dsapi/dirmem.c
--- likewise-open.old/lsass/server/store/dsapi/dirmem.c	2011-06-29 14:48:48.000000000 -0700
+++ likewise-open.new/lsass/server/store/dsapi/dirmem.c	2011-06-29 15:05:39.000000000 -0700
@@ -42,7 +42,10 @@
  * Authors: Krishna Ganugapati (krishnag@likewisesoftware.com)
  *          Sriram Nambakam (snambakam@likewisesoftware.com)
  */
+
 #include "includes.h"
+#include <sqlite3.h>
+
 
 DWORD
 DirectoryAllocateMemory(
@@ -239,3 +242,46 @@
     }
 }
 
+
+DWORD
+DirectoryAllocateWC16StringFilterPrintf(
+    OUT PWSTR* pOutput,
+    IN PCSTR Format,
+    ...
+    )
+{
+    DWORD err = ERROR_SUCCESS;
+    va_list args;
+    PSTR formattedString = NULL;
+    PWSTR output = NULL;
+
+    va_start(args, Format);
+    formattedString = sqlite3_vmprintf(Format, args);
+    va_end(args);
+
+    if (formattedString == NULL)
+    {
+        err = ERROR_NOT_ENOUGH_MEMORY;
+        BAIL_ON_LSA_ERROR(err);
+    }
+
+    err = LwMbsToWc16s(formattedString, &output);
+    BAIL_ON_LSA_ERROR(err);
+
+error:
+    if (err)
+    {
+        LW_SAFE_FREE_MEMORY(output);
+    }
+
+    if (formattedString)
+    {
+        sqlite3_free(formattedString);
+    }
+
+    *pOutput = output;
+
+    return err;
+}
+
+
diff -Nurb likewise-open.old/lsass/server/store/dsapi/Makefile.am likewise-open.new/lsass/server/store/dsapi/Makefile.am
--- likewise-open.old/lsass/server/store/dsapi/Makefile.am	2011-06-29 14:48:50.000000000 -0700
+++ likewise-open.new/lsass/server/store/dsapi/Makefile.am	2011-06-29 15:05:39.000000000 -0700
@@ -34,13 +34,16 @@
         -DLW_ENABLE_THREADS=1                 \
         $(LWBASE_INCLUDES)                    \
         -I$(top_srcdir)/server/include        \
-        -I$(top_srcdir)/server/store/include
+        -I$(top_srcdir)/server/store/include  \
+        $(SQLITE_INCLUDES)
 
 libdsapi_la_LIBADD =                             \
         $(LWBASE_LIBS)                           \
         $(ADDITIONAL_LIBS)                       \
         $(DL_LIBS)                               \
-        $(top_builddir)/common/liblsacommon.la
+        $(top_builddir)/common/liblsacommon.la   \
+        $(SQLITE_LIBS)
 
 libdsapi_la_LDFLAGS =                            \
-        $(LWBASE_LDFLAGS)
+        $(LWBASE_LDFLAGS)  \
+        $(SQLITE_LDFLAGS)
