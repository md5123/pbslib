From 1d22d773f67f8c00ab8881d2cce00ef95abf24f7 Mon Sep 17 00:00:00 2001
From: Alberto Milone <alberto.milone@canonical.com>
Date: Fri, 27 Jan 2012 19:31:55 +0100
Subject: [PATCH 1/1] Try to fall back to autoconfiguration in some cases
 despite having configuration files

Fall back to autoconfiguration if either the graphics
driver module specified in configuration files can't be
found or if there's no device supported by the specified
driver.


diff -ur xorg-server-1.12.2/hw/xfree86/common/xf86Globals.c xorg-server-1.12.2.new//hw/xfree86/common/xf86Globals.c
--- xorg-server-1.12.2/hw/xfree86/common/xf86Globals.c	2012-05-17 17:09:03.000000000 +0000
+++ xorg-server-1.12.2.new//hw/xfree86/common/xf86Globals.c	2012-07-19 11:23:04.319496986 +0000
@@ -153,6 +153,7 @@
 InputDriverPtr *xf86InputDriverList = NULL;
 int xf86NumInputDrivers = 0;
 int xf86NumScreens = 0;
+Bool xf86AttemptedFallback = FALSE;
 
 const char *xf86VisualNames[] = {
     "StaticGray",
diff -ur xorg-server-1.12.2/hw/xfree86/common/xf86Init.c xorg-server-1.12.2.new//hw/xfree86/common/xf86Init.c
--- xorg-server-1.12.2/hw/xfree86/common/xf86Init.c	2012-05-29 20:04:19.000000000 +0000
+++ xorg-server-1.12.2.new//hw/xfree86/common/xf86Init.c	2012-07-19 11:25:58.656154217 +0000
@@ -476,20 +476,35 @@
             free(optionlist);
         }
 
+ Fallback:
         /* Load all driver modules specified in the config file */
         /* If there aren't any specified in the config file, autoconfig them */
         /* FIXME: Does not handle multiple active screen sections, but I'm not
          * sure if we really want to handle that case*/
         configured_device = xf86ConfigLayout.screens->screen->device;
-        if ((!configured_device) || (!configured_device->driver)) {
+	if (xf86AttemptedFallback) {
+	        configured_device->driver = NULL;
+	        if (!autoConfigDevice(configured_device)) {
+	            xf86Msg(X_ERROR, "Auto configuration on fallback failed\n");
+	            return;
+	        }
+	    }
+	    else if ((!configured_device) || (!configured_device->driver)) {
+
             if (!autoConfigDevice(configured_device)) {
                 xf86Msg(X_ERROR, "Automatic driver configuration failed\n");
                 return;
             }
         }
         if ((modulelist = xf86DriverlistFromConfig())) {
-            xf86LoadModules(modulelist, NULL);
-            free(modulelist);
+	     if (!xf86LoadModules(modulelist, NULL) && !xf86AttemptedFallback) {
+	          free(modulelist);
+	          xf86AttemptedFallback = TRUE;
+	          goto Fallback;
+	      }
+	      else {
+	          free(modulelist);
+	      }
         }
 
         /* Load all input driver modules specified in the config file. */
@@ -549,8 +564,15 @@
         else
             xf86Info.dontVTSwitch = TRUE;
 
-        if (xf86BusConfig() == FALSE)
-            return;
+	if (xf86BusConfig() == FALSE) {
+	        if (!xf86AttemptedFallback) {
+	            xf86AttemptedFallback = TRUE;
+	            goto Fallback;
+	        }
+	        else {
+	            return;
+	        }
+	}
 
         xf86PostProbe();
 
diff -ur xorg-server-1.12.2/hw/xfree86/common/xf86Priv.h xorg-server-1.12.2.new//hw/xfree86/common/xf86Priv.h
--- xorg-server-1.12.2/hw/xfree86/common/xf86Priv.h	2012-05-17 17:09:03.000000000 +0000
+++ xorg-server-1.12.2.new//hw/xfree86/common/xf86Priv.h	2012-07-19 11:26:33.632818989 +0000
@@ -88,6 +88,7 @@
 extern _X_EXPORT Bool xf86Resetting;
 extern _X_EXPORT Bool xf86Initialising;
 extern _X_EXPORT int xf86NumScreens;
+extern _X_EXPORT  Bool xf86AttemptedFallback;
 extern _X_EXPORT const char *xf86VisualNames[];
 extern _X_EXPORT int xf86Verbose;       /* verbosity level */
 extern _X_EXPORT int xf86LogVerbose;    /* log file verbosity level */
