Subject: Enable smooth transition between plymouth and X

diff -ur gdm-2.30.2-ylmf3/daemon/gdm-server.c gdm-2.30.2-ylmf3.new/daemon/gdm-server.c
--- gdm-2.30.2-ylmf3/daemon/gdm-server.c	2010-04-27 01:08:42.000000000 +0800
+++ gdm-2.30.2-ylmf3.new/daemon/gdm-server.c	2011-05-24 12:39:41.997200848 +0800
@@ -32,8 +32,10 @@
 #include <pwd.h>
 #include <grp.h>
 #include <signal.h>
+#include <sys/ioctl.h>
 #include <sys/resource.h>
 
+#include <linux/vt.h>
 #include <glib.h>
 #include <glib/gi18n.h>
 #include <glib/gstdio.h>
@@ -663,6 +665,44 @@
         return ret;
 }
 
+static int
+get_active_vt (void)
+{
+        int console_fd;
+        struct vt_stat console_state = { 0 };
+
+        console_fd = open ("/dev/tty0", O_RDONLY | O_NOCTTY);
+
+        if (console_fd < 0) {
+                goto out;
+        }
+
+        if (ioctl (console_fd, VT_GETSTATE, &console_state) < 0) {
+                goto out;
+        }
+
+out:
+        if (console_fd >= 0) {
+                close (console_fd);
+        }
+
+        return console_state.v_active;
+}
+
+static char *
+get_active_vt_as_string (void)
+{
+        int vt;
+
+        vt = get_active_vt ();
+
+        if (vt <= 0) {
+                return NULL;
+        }
+
+        return g_strdup_printf ("vt%d", vt);
+}
+
 /**
  * gdm_server_start:
  * @disp: Pointer to a GdmDisplay structure
@@ -680,6 +720,21 @@
 
         return res;
 }
+
+gboolean
+gdm_server_start_on_active_vt (GdmServer *server)
+{
+        gboolean res;
+        char *vt;
+
+        g_free (server->priv->command);
+        server->priv->command = g_strdup (X_SERVER " -nr -verbose");
+        vt = get_active_vt_as_string ();
+        res = gdm_server_spawn (server, vt);
+        g_free (vt);
+
+        return res;
+}
 
 static void
 server_died (GdmServer *server)
diff -ur gdm-2.30.2-ylmf3/daemon/gdm-server.h gdm-2.30.2-ylmf3.new/daemon/gdm-server.h
--- gdm-2.30.2-ylmf3/daemon/gdm-server.h	2010-03-26 21:28:03.000000000 +0800
+++ gdm-2.30.2-ylmf3.new/daemon/gdm-server.h	2011-05-24 12:41:39.263865961 +0800
@@ -56,6 +56,7 @@
 GdmServer *         gdm_server_new       (const char *display_id,
                                           const char *auth_file);
 gboolean            gdm_server_start     (GdmServer   *server);
+gboolean            gdm_server_start_on_active_vt (GdmServer   *server);
 gboolean            gdm_server_stop      (GdmServer   *server);
 char *              gdm_server_get_display_device (GdmServer *server);
 
diff -ur gdm-2.30.2-ylmf3/daemon/gdm-simple-slave.c gdm-2.30.2-ylmf3.new/daemon/gdm-simple-slave.c
--- gdm-2.30.2-ylmf3/daemon/gdm-simple-slave.c	2010-04-27 01:08:42.000000000 +0800
+++ gdm-2.30.2-ylmf3.new/daemon/gdm-simple-slave.c	2011-05-24 13:14:12.213840086 +0800
@@ -84,6 +84,7 @@
 
         guint              start_session_when_ready : 1;
         guint              waiting_to_start_session : 1;
+	guint              plymouth_is_running : 1;
 };
 
 enum {
@@ -894,11 +895,101 @@
         slave->priv->start_session_when_ready = FALSE;
 }
 
+static gboolean
+plymouth_is_running (void)
+{
+        int      status;
+        gboolean res;
+        GError  *error;
+
+        error = NULL;
+        res = g_spawn_command_line_sync ("/bin/plymouth --ping",
+                                         NULL, NULL, &status, &error);
+        if (! res) {
+                g_debug ("Could not ping plymouth: %s", error->message);
+                g_error_free (error);
+                return FALSE;
+        }
+
+        return WIFEXITED (status) && WEXITSTATUS (status) == 0;
+}
+
+static gboolean
+plymouth_has_active_vt (void)
+{
+        int      status;
+        gboolean res;
+        GError  *error;
+
+        error = NULL;
+        res = g_spawn_command_line_sync ("/bin/plymouth --has-active-vt",
+                                         NULL, NULL, &status, &error);
+        if (! res) {
+                g_debug ("Could not ask plymouth: %s", error->message);
+                g_error_free (error);
+                return FALSE;
+        }
+
+        return WIFEXITED (status) && WEXITSTATUS (status) == 0;
+}
+
+static void
+plymouth_prepare_for_transition (GdmSimpleSlave *slave)
+{
+        gboolean res;
+        GError  *error;
+
+        error = NULL;
+        res = g_spawn_command_line_sync ("/bin/plymouth deactivate",
+                                         NULL, NULL, NULL, &error);
+        if (! res) {
+                g_warning ("Could not deactivate plymouth: %s", error->message);
+                g_error_free (error);
+        }
+}
+
+static void
+plymouth_quit_with_transition (GdmSimpleSlave *slave)
+{
+        gboolean res;
+        GError  *error;
+
+        error = NULL;
+        res = g_spawn_command_line_sync ("/bin/plymouth quit --retain-splash",
+                                         NULL, NULL, NULL, &error);
+        if (! res) {
+                g_warning ("Could not quit plymouth: %s", error->message);
+                g_error_free (error);
+        }
+        slave->priv->plymouth_is_running = FALSE;
+}
+
+static void
+plymouth_quit_without_transition (GdmSimpleSlave *slave)
+{
+        gboolean res;
+        GError  *error;
+
+        error = NULL;
+        res = g_spawn_command_line_sync ("/bin/plymouth quit",
+                                         NULL, NULL, NULL, &error);
+        if (! res) {
+                g_warning ("Could not quit plymouth: %s", error->message);
+                g_error_free (error);
+        }
+        slave->priv->plymouth_is_running = FALSE;
+}
+
 static void
 setup_server (GdmSimpleSlave *slave)
 {
         /* Set the busy cursor */
         gdm_slave_set_busy_cursor (GDM_SLAVE (slave));
+	
+	/* Plymouth is waiting for the go-ahead to exit */
+	if (slave->priv->plymouth_is_running) {
+	                plymouth_quit_with_transition (slave);
+	}
 }
 
 static void
@@ -1092,6 +1183,10 @@
         g_debug ("GdmSimpleSlave: server exited with code %d\n", exit_code);
 
         gdm_slave_stopped (GDM_SLAVE (slave));
+
+	if (slave->priv->plymouth_is_running) {
+	                plymouth_quit_without_transition (slave);
+	}
 }
 
 static void
@@ -1104,6 +1199,10 @@
                  g_strsignal (signal_number));
 
         gdm_slave_stopped (GDM_SLAVE (slave));
+
+	if (slave->priv->plymouth_is_running) {
+	                plymouth_quit_without_transition (slave);
+	}
 }
 
 static gboolean
@@ -1148,7 +1247,22 @@
                                   G_CALLBACK (on_server_ready),
                                   slave);
 
-                res = gdm_server_start (slave->priv->server);
+                slave->priv->plymouth_is_running = plymouth_is_running ();
+
+                if (slave->priv->plymouth_is_running) {
+                        plymouth_prepare_for_transition (slave);
+
+                       if (plymouth_has_active_vt ()) {
+                               res = gdm_server_start_on_active_vt (slave->priv->server);
+                       } else {
+                                plymouth_quit_without_transition (slave);
+                               slave->priv->plymouth_is_running = 0;
+                               res = gdm_server_start (slave->priv->server);
+                       }
+                } else {
+                        res = gdm_server_start (slave->priv->server);
+                }
+
                 if (! res) {
                         g_warning (_("Could not start the X "
                                      "server (your graphical environment) "
@@ -1158,6 +1272,9 @@
                                      "In the meantime this display will be "
                                      "disabled.  Please restart GDM when "
                                      "the problem is corrected."));
+			if (slave->priv->plymouth_is_running) {
+				plymouth_quit_without_transition (slave);
+			}
                         exit (1);
                 }
 
