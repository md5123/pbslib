Description: Alters the way GDM handles language settings.
Bug-Ubuntu: https://launchpad.net/bugs/553162, https://launchpad.net/bugs/666565, https://launchpad.net/bugs/740754
Forwarded: not-needed
Author: Gunnar Hjalmarsson <ubuntu@gunnar.cc>

Index: gdm-2.32.1/daemon/gdm-session-direct.c
===================================================================
--- gdm-2.32.1.orig/daemon/gdm-session-direct.c	2011-04-08 16:34:14.821921366 +1000
+++ gdm-2.32.1/daemon/gdm-session-direct.c	2011-04-08 16:34:15.661921368 +1000
@@ -691,10 +691,23 @@
 static const char *
 get_default_language_name (GdmSessionDirect *session)
 {
+    char *langlist, *language;
+
     if (session->priv->saved_language != NULL) {
                 return session->priv->saved_language;
     }
 
+    langlist = getenv("LANGUAGE");
+    if (langlist != NULL && strlen(langlist) > 0) {
+        char *colon = strchr (langlist, ':');
+        if (colon) {
+            language = g_strndup (langlist, colon - langlist);
+        } else {
+            language = g_strdup (langlist);
+        }
+        return language;
+    }
+
     return setlocale (LC_MESSAGES, NULL);
 }
 
Index: gdm-2.32.1/data/Xsession.in
===================================================================
--- gdm-2.32.1.orig/data/Xsession.in	2011-04-08 16:34:14.801921366 +1000
+++ gdm-2.32.1/data/Xsession.in	2011-04-08 16:34:15.661921368 +1000
@@ -146,11 +146,136 @@
 
 unset XKB_IN_USE
 
-# Overwrite $LANG from /etc/profile (and friends) with the one picked in the
-# greeter
-if [ -n "$GDM_LANG" ]; then
-  LANG="$GDM_LANG"
-  export LANG
+language_environment_update() {
+    langcode=${gdm_selected%%[_@]*}
+    if [ -z "$langlist" ] || [ $gdm_selected != ${langlist%%:*} ]; then
+        # make the first value in the LANGUAGE priority list correspond
+        # with the language selected in the GDM greeter
+        if [ -n "$langlist" -a $langcode != 'en' ]; then
+            if expr $langlist : ".*:$gdm_selected:" > /dev/null ; then
+                langlist=$( echo $langlist | sed -r "s/(.+:)($gdm_selected:)/\2\1/" )
+            else
+                langlist=$gdm_selected:$langlist
+            fi
+        else
+            # build list with 'en' as the last element
+            # no other languages if English was selected
+            langlist=$gdm_selected
+            [ $langlist != 'en' ] && langlist=$langlist:en
+        fi
+    fi
+
+    # set LC_MESSAGES for applications that don't recognize LANGUAGE
+    #
+    lcmess=
+    locales=
+    # skip locales for other languages
+    for loc in $( locale -a | grep -F .utf8 ); do
+        if [ $langcode = ${loc%%[._@]*} ]; then
+            loc=${loc%.*}${loc#*.utf8}
+            locales=$locales" $loc"
+        fi
+    done
+    # exact match
+    for loc in $locales; do
+        if [ $gdm_selected = $loc ]; then
+            lcmess=$( echo $loc | sed -r 's/([^@]+)/\1.UTF-8/' )
+            break
+        fi
+    done
+    if [ -z "$lcmess" -a $gdm_selected = ${gdm_selected%_*} ]; then
+        # try the "main" country code if any
+        main_countries=/usr/share/language-selector/data/main-countries
+        test -f $main_countries && {
+            main_country=
+            while read line; do
+                if [ "${line%%[[:space:]]*}" = $langcode ]; then
+                    main_country=${line##*[[:space:]]}
+                    if [ $langcode != ${gdm_selected#*@} ]; then
+                        main_country=$main_country@${gdm_selected#*@}
+                    fi
+                    break
+                fi
+            done < $main_countries
+            if [ -n "$main_country" ]; then
+                for loc in $locales; do
+                    if [ $main_country = $loc ]; then
+                        lcmess=$( echo $loc | sed -r 's/([^@]+)/\1.UTF-8/' )
+                        break
+                    fi
+                done
+            fi
+        }
+        # try out fitting locale with any country code
+        if [ -z "$lcmess" ]; then
+            for loc in $locales; do
+                if [ $langcode = ${loc%%[_@]*} ]; then
+                    lcmess=$( echo $loc | sed -r 's/([^@]+)/\1.UTF-8/' )
+                    break
+                fi
+            done
+        fi
+    fi
+
+    dmrc_update() {
+        key=$1; value=$2
+        if [ "$( grep -F $key $dmrc )" ]; then
+            sed -i "s/$key.*/$key=$value/" $dmrc
+        else
+            echo "$key=$value" >> $dmrc
+        fi
+    }
+    dmrc_update 'Langlist' $langlist
+    dmrc_update 'LCMess' $lcmess
+}
+
+# read /var/cache/gdm/$USER/dmrc and set LANGUAGE and LC_MESSAGES
+if [ -n "$GDM_LANG" -a "${DESKTOP_SESSION#*guest}" != '-restricted' ]; then
+    if [ $GDM_LANG != ${GDM_LANG%.utf8*} ]; then
+        gdm_selected=${GDM_LANG%.*}${GDM_LANG#*.utf8}
+    elif [ $GDM_LANG != ${GDM_LANG%.UTF-8*} ]; then
+        gdm_selected=${GDM_LANG%.*}${GDM_LANG#*.UTF-8}
+    else
+        gdm_selected=$GDM_LANG
+    fi
+    dmrc=/var/cache/gdm/$USER/dmrc
+    test -f "$dmrc" || {
+        echo "\n[Desktop]\nLanguage=$gdm_selected" > $dmrc
+    }
+    while read line; do
+        [ "${line%=*}" = 'Langlist' ] && langlist=${line#*=}
+        [ "${line%=*}" = 'LCMess' ] && lcmess=${line#*=}
+    done < $dmrc
+    if [ -z "$langlist" -a -z "$lcmess" -a -f "$HOME/.xsession-errors.old" ]; then
+        # Both fields empty and not $USER's first login ever => we assume that this is
+        # $USER's first login since upgrading from a pre 2.32.0-0ubuntu2 GDM version,
+        # so we fake $gdm_selected in an attempt to get the language environment right
+        # from start and prevent an undesired surprise.
+        if [ -n "$LANGUAGE" ]; then
+            gdm_selected=${LANGUAGE%%:*}
+            if [ "$( grep -F Language $dmrc )" ]; then
+                sed -i "s/Language=.*/Language=$gdm_selected/" $dmrc
+            else
+                echo "Language=$gdm_selected" >> $dmrc
+            fi
+        fi
+    fi
+    if [ -z "$langlist" ] || [ $gdm_selected != ${langlist%%:*} ]; then
+        # If the user changed language, update the env. values and edit the cache file.
+        language_environment_update
+    fi
+    export LANGUAGE="$langlist"
+    if [ $LANG != ${LANG%.utf8*} ]; then
+        x_lang=${LANG%.*}.UTF-8${LANG#*.utf8}
+    else
+        x_lang=${LANG%.*}.utf8${LANG#*.UTF-8}
+    fi
+    if [ -n "$lcmess" -a $lcmess != $LANG -a $lcmess != $x_lang ]; then
+        export LC_MESSAGES="$lcmess"
+    else
+        # no fitting locale or same as LANG
+        unset LC_MESSAGES
+    fi
 fi
 
 # run all system xinitrc shell scripts.
