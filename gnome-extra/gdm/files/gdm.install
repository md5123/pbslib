. /usr/lib/ybs/funcs

ldm=lightdm.service
gdm=gdm.service
files="$ldm $gdm"

post_install() {
	# Creat gdm user and groups
	douseradd -c "gdm user" -d "/var/lib/gdm" -s "/bin/false" -r "gdm"

	# Install schemas
	gnome2_install_schema "/etc/gconf/schemas/gdm-simple-greeter.schemas"

	# Setup default gconf value
	gnome2_install_defaut_gconf "boolean" "/apps/gdm/simple-greeter/accessibility/screen_reader_enabled" "true"

	# Reload
	gnome2_rarian_sk_update
	gnome2_desktop_database_update

	# Setup gdm configfile
	[ -f /etc/gdm/custom.conf ] || cp /etc/gdm/custom.conf.ori /etc/gdm/custom.conf

	# These GTK+ files need to be kept up to date for
	# proper input method with additional gdm modules
	gnome2_gtk_immodules_update
	
	# Update hicolor icons
	gnome2_icon_cache_update

	# Setting permission for /var/lib/gdm
	chown -R gdm:gdm /var/lib/gdm
	chown -R gdm:gdm /var/lib/gdm/
	
	# Systemd unit
	if systemctl enable $files 2>/dev/null; then
		echo "* $files are exits, I choose $ldm."
		systemctl disable $files
		systemctl enable $ldm
	fi	

	return 0
}

post_upgrade() {
	systemctl --system daemon-reload
	post_install
}

post_downgrade() {
	post_upgrade
}

pre_remove() {
	systemctl disable gdm.service ||true
}

post_remove() {
	#
	rm /etc/gdm/custom.conf 2>/dev/null

	#
	douserdel -r gdm
	dogroupdel gdm

	#
	if ! systemctl enable $ldm 2>/dev/null; then
		echo "* $gdm was removed, but $ldm is not found or broken"
                echo "* You may launch desktop manually."
	else
		echo "* $gdm was removed, but $ldm is found"
		echo "* use $ldm for display-manager."
        fi
 
 	return 0
}

