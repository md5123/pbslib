Description: If other operating systems are installed, then automatically
 unhide the menu. Otherwise, if GRUB_HIDDEN_TIMEOUT is 0, then use keystatus
 if available to check whether Shift is pressed. If it is, show the menu,
 otherwise boot immediately. If keystatus is not available, then fall back
 to a short delay interruptible with Escape.
UbuntuSpecific: May or may not remain Ubuntu-specific, although this is not
 obviously wanted upstream. It implements a requirement of
 https://wiki.ubuntu.com/DesktopExperienceTeam/KarmicBootExperienceDesignSpec#Bootloader.

diff -Nur -x '*.orig' -x '*~' grub2/util/grub.d/00_header.in grub2.new/util/grub.d/00_header.in
--- grub2/util/grub.d/00_header.in	2010-03-09 16:14:00.000000000 +0000
+++ grub2.new/util/grub.d/00_header.in	2010-03-09 16:57:21.000000000 +0000
@@ -142,22 +142,9 @@
 EOF
 fi
 
-if [ "x${GRUB_HIDDEN_TIMEOUT}" != "x" ] ; then
-  if [ "x${GRUB_HIDDEN_TIMEOUT_QUIET}" = "xtrue" ] ; then
-    verbose=
-  else
-    verbose=" --verbose"
-  fi
-  cat << EOF
-if sleep$verbose --interruptible ${GRUB_HIDDEN_TIMEOUT} ; then
-  set timeout=${GRUB_TIMEOUT}
-fi
-EOF
-else
-  cat << EOF
+cat << EOF
 set timeout=${GRUB_TIMEOUT}
 EOF
-fi
 
 # Play an initial tune
 if [ "x${GRUB_INIT_TUNE}" != "x" ] ; then
diff -Nur -x '*.orig' -x '*~' grub2/util/grub.d/30_os-prober.in grub2.new/util/grub.d/30_os-prober.in
--- grub2/util/grub.d/30_os-prober.in	2010-03-03 20:27:58.000000000 +0000
+++ grub2.new/util/grub.d/30_os-prober.in	2010-03-09 16:56:58.000000000 +0000
@@ -22,18 +22,61 @@
 
 . ${libdir}/grub/grub-mkconfig_lib
 
+found_other_os=
+
+adjust_timeout () {
+  if [ "x${found_other_os}" = "x" ] ; then
+    if [ "x${GRUB_HIDDEN_TIMEOUT}" != "x" ] ; then
+      if [ "x${GRUB_HIDDEN_TIMEOUT_QUIET}" = "xtrue" ] ; then
+	verbose=
+      else
+	verbose=" --verbose"
+      fi
+
+      if [ "x${GRUB_HIDDEN_TIMEOUT}" = "x0" ] ; then
+	cat <<EOF
+if [ \${timeout} != -1 ]; then
+  if keystatus; then
+    if keystatus --shift; then
+      set timeout=-1
+    else
+      set timeout=0
+    fi
+  else
+    if sleep$verbose --interruptible 3 ; then
+      set timeout=0
+    fi
+  fi
+fi
+EOF
+      else
+	cat << EOF
+if [ \${timeout} != -1 ]; then
+  if sleep$verbose --interruptible ${GRUB_HIDDEN_TIMEOUT} ; then
+    set timeout=0
+  fi
+fi
+EOF
+      fi
+    fi
+  fi
+}
+
 if [ "x${GRUB_DISABLE_OS_PROBER}" = "xtrue" ]; then
+  adjust_timeout
   exit 0
 fi
 
 if [ -z "`which os-prober 2> /dev/null`" -o -z "`which linux-boot-prober 2> /dev/null`" ] ; then
   # missing os-prober and/or linux-boot-prober
+  adjust_timeout
   exit 0
 fi
 
 OSPROBED="`os-prober | tr ' ' '^' | paste -s -d ' '`"
 if [ -z "${OSPROBED}" ] ; then
   # empty os-prober output, nothing doing
+  adjust_timeout
   exit 0
 fi
 
@@ -99,6 +142,7 @@
   fi
 
   echo "Found ${LONGNAME} on ${DEVICE}" >&2
+  found_other_os=1
 
   case ${BOOT} in
     chain)
@@ -201,3 +245,5 @@
     ;;
   esac
 done
+
+adjust_timeout
