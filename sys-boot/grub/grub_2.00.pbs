#
# StartOS package build script
#
# Copyright 2005-2012 StartOS
# Distributed under the terms of the GNU General Public License v2
#

DESCRIPTION="GRand Unified Bootloader"
HOMEPAGE="http://www.gnu.org/software/grub/"
LICENSE="GPLv3"
PACKAGER="Zhongxin Huang <huangzhongxin@ivali.com>"
PRIORITY="required"

SRC_URI="http://ftp.gnu.org/gnu/$N/"$N-$V".tar.xz 
         ftp://ftp.archlinux.org/other/grub2/grub2_extras_lua_r24.tar.xz
         ftp://ftp.archlinux.org/other/grub2/grub2_extras_ntldr-img_r21.tar.xz
         ftp://ftp.archlinux.org/other/grub2/grub2_extras_915resolution_r9.tar.xz"
CHECKSUM="274d91e96b56a5b9dd0a07accff69dbb6dfb596b
          89290031b974780c6df76893836d2477d4add895
          eb4b35b4c36b64f9405cbcbc538cb205171c1c0a
          d5ae2efec25616028a9d89e98b6e454f1c4c415f"

PROVIDE="grub-common grub-bios grub-efi-i386 grub-efi-x86-64"

BDEPEND="xz unifont python autogen texinfo gettext device-mapper fuse dosfstools efibootmgr"
OPTIONAL="libisoburn: provides xorriso for generating grub rescue iso using grub-mkrescue
          os-prober: to detect other OSes when generating grub.cfg in BIOS systems
          mtools: for grub-mkrescue FAT FS support"

OPTIONS="nostrip"

pbs_unpack() {
    dounpack
}

pbs_patch() {
    dopatch build-glibc-2.16.patch 
    # patches from Ubuntu 12.10
    dopatch fetch_latest_po.patch  
    dopatch disable_floppies.patch 
    dopatch gfxpayload_keep_default.patch  
    dopatch mkconfig_skip_dmcrypt.patch 
    dopatch mkconfig_loopback.patch 
    dopatch gettext_quiet.patch 
    dopatch mkconfig_overescaping.patch 
    dopatch mkconfig_ubuntu_recovery.patch 
    dopatch mkconfig_stderr_handling.patch 
    dopatch mkconfig_nonexistent_loopback.patch 
    dopatch ubuntu_grub_standards.patch
    dopatch ubuntu_vt_handoff.patch 
    dopatch ubuntu_blacklist_1440x900x32.patch 
    dopatch ubuntu_recovery_nomodeset.patch
    dopatch ubuntu_wubi_no_windows.patch 
    dopatch ubuntu_probe_dmraid.patch 
    dopatch ubuntu_mount_readdir_symlink_failures.patch 
    dopatch ubuntu_initrd_addr_min.patch 
    dopatch ubuntu_really_quiet.patch

    # Fetch latest po, rsync is required
    bash linguas.sh

    cd ../
    cp -a "$N-$V$R" grub_bios
    cp -a "$N-$V$R" grub_EFI_86
    cp -a "$N-$V$R" grub_EFI_64
    GRUB_BIOS_DIR="$(readlink -f grub_bios)"
    GRUB_EFI_86_DIR="$(readlink -f grub_EFI_86)"
    GRUB_EFI_64_DIR="$(readlink -f grub_EFI_64)"
}

pbs_build() {
    ## set architecture dependent variables
     [ "${ARCH}" == "x86_64" ] && _EFIEMU="--enable-efiemu" || _EFIEMU="--disable-efiemu"
    _HOST="${ARCH}"
    #
    # Build_grub-common_and_bios
    #
    cd "$GRUB_BIOS_DIR"
    ## fix DejaVuSans.ttf location so that grub-mkfont can create *.pf2 files for starfield theme
    #sed 's|/usr/share/fonts/dejavu|/usr/share/fonts/dejavu /usr/share/fonts/TTF|g' -i configure.ac
    ## add the grub-extra sources
    install -d grub-extras
    export GRUB_CONTRIB="$(readlink -f grub-extras)"
    tar xf "$YBS_SOURCE"/grub2_extras_lua_r24.tar.xz -C grub-extras
    tar xf "$YBS_SOURCE"/grub2_extras_ntldr-img_r21.tar.xz -C grub-extras
    tar xf "$YBS_SOURCE"/grub2_extras_915resolution_r9.tar.xz -C grub-extras

    #
    ./autogen.sh
    CFLAGS="" \
    ./configure --with-platform="pc" \
                "${_EFIEMU}" \
                --target="i386" \
                --enable-mm-debug \
                --enable-nls \
                --enable-device-mapper \
                --enable-cache-stats \
                --enable-grub-mkfont \
                --enable-grub-mount \
                --prefix="/usr" \
                --bindir="/usr/bin" \
                --sbindir="/usr/sbin" \
                --mandir="/usr/share/man" \
                --infodir="/usr/share/info" \
                --datarootdir="/usr/share" \
                --sysconfdir="/etc" \
                --program-prefix="" \
                --with-bootdir="/boot" \
                --with-grubdir="grub" \
                --disable-werror \
                || die "grub_bios configure failed."

    CFLAGS="" domake || die "grub_bios make failed."
    
    #
    # Build_grub-efi-i386
    #
    cd "$GRUB_EFI_86_DIR"
    install -d grub-extras
    export GRUB_CONTRIB="$(readlink -f grub-extras)"
    tar xf "$YBS_SOURCE"/grub2_extras_lua_r24.tar.xz -C grub-extras

    ./autogen.sh
    CFLAGS="" \
    ./configure --with-platform="efi" \
                --disable-efiemu \
                --target="i386" \
                --enable-mm-debug \
                --enable-nls \
                --enable-device-mapper \
                --enable-cache-stats \
                --enable-grub-mkfont \
                --enable-grub-mount \
                --prefix="/usr" \
                --bindir="/usr/bin" \
                --sbindir="/usr/sbin" \
                --mandir="/usr/share/man" \
                --infodir="/usr/share/info" \
                --datarootdir="/usr/share" \
                --sysconfdir="/etc" \
                --program-prefix="" \
                --with-bootdir="/boot" \
                --with-grubdir="grub" \
                --disable-werror \
                || die "grub-efi-i386 configure failed."

    CFLAGS="" domake || die "grub-efi-i386 make failed."

    
    #
    # Build_grub-efi-x86_64
    #
    cd "$GRUB_EFI_64_DIR"
    install -d grub-extras
    export GRUB_CONTRIB="$(readlink -f grub-extras)"
    tar xf "$YBS_SOURCE"/grub2_extras_lua_r24.tar.xz -C grub-extras

    ./autogen.sh
    CFLAGS="" \
    ./configure --with-platform="efi" \
                --disable-efiemu \
                --target="x86_64" \
                --enable-mm-debug \
                --enable-nls \
                --enable-device-mapper \
                --enable-cache-stats \
                --enable-grub-mkfont \
                --enable-grub-mount \
                --prefix="/usr" \
                --bindir="/usr/bin" \
                --sbindir="/usr/sbin" \
                --mandir="/usr/share/man" \
                --infodir="/usr/share/info" \
                --datarootdir="/usr/share" \
                --sysconfdir="/etc" \
                --program-prefix="" \
                --with-bootdir="/boot" \
                --with-grubdir="grub" \
                --disable-werror \
                || die "grub-efi-x86-64 configure failed."

    CFLAGS="" domake || die "grub-efi-x86-64 make failed."
}

grub-common_install() {
    DESCRIPTION="GNU GRand Unified Bootloader - Utilities and Common Files"
    RDEPEND="xz freetype device-mapper fuse"
    BDEPEND=""
    RECOMMENDED=""
    INSTALL="$N.install"
    
    cd "$GRUB_BIOS_DIR"
    domkinstall
	
    cd "$destdir"
	docp "$filesdir"/grub.default     usr/share/grub/
    docp "$filesdir"/20_memtest86+    etc/grub.d/
	docp "$filesdir"/00_header        usr/share/grub-gfxpayload-lists/blacklist/
	docp "$filesdir"/{update-grub2,update-grub,update-grub-gfxpayload}  usr/sbin/

    # remove platform specific files
    rm -rf usr/lib/grub/i386-pc/
    # misc
    mv usr/sbin/grub-install{,.real}
    mkdir -p boot/grub/
}

grub-bios_install() {
    DESCRIPTION="GNU GRand Unified Bootloader - i386 PC BIOS Modules"
    RDEPEND="grub-common"
    
    cd "$GRUB_BIOS_DIR"
    domkinstall || die "grub-bios make install failed."

    cd "$destdir"
    ## remove non platform-specific files
    rm -rf {boot,etc,usr/{share,bin,sbin}}
    ## remove gdb debugging related files
    rm -f usr/lib/grub/i386-pc/*.module
    rm -f usr/lib/grub/i386-pc/*.image
    rm -f usr/lib/grub/i386-pc/{kernel.exec,gdb_grub,gmodule.pl}
}

grub-efi-i386_install () {
    DESCRIPTION="GNU GRand Unified Bootloader - i386 UEFI Modules"
    RDEPEND="grub-common dosfstools efibootmgr"

    cd "$GRUB_EFI_86_DIR"
    domkinstall || die "grub-efi-i386 make install failed."

    cd "$destdir"
    ## remove non platform-specific files
    rm -rf {boot,etc,usr/{share,bin,sbin}}
    ## remove gdb debugging related files
    rm -f usr/lib/grub/i386-efi/*.module 
    rm -f usr/lib/grub/i386-efi/*.image 
    rm -f usr/lib/grub/i386-efi/{kernel.exec,gdb_grub,gmodule.pl}
}

grub-efi-x86-64_install () {
    DESCRIPTION="GNU GRand Unified Bootloader - x86_64 UEFI Modules"
    RDEPEND="grub-common dosfstools efibootmgr"
    YARCH="any"
    
    cd "$GRUB_EFI_64_DIR"
    domkinstall || die "grub-efi-x86_64 make install failed."

    cd "$destdir"
    ## remove non platform-specific files
    rm -rf {boot,etc,usr/{share,bin,sbin}}
    ## remove gdb debugging related files
    rm -f usr/lib/grub/x86_64-efi/*.module
    rm -f usr/lib/grub/x86_64-efi/*.image
    rm -f usr/lib/grub/x86_64-efi/{kernel.exec,gdb_grub,gmodule.pl}
}

